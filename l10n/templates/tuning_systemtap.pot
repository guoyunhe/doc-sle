# SOME DESCRIPTIVE TITLE.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2017-01-20 18:23+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <kde-i18n-doc@kde.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: tuning_systemtap.xml:49
#, no-c-format
msgid "&stap;&mdash;Filtering and Analyzing System Data"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:66
#, no-c-format
msgid ""
"&stap; provides a command line interface and a scripting language to examine "
"the activities of a running Linux system, particularly the kernel, in fine "
"detail. &stap; scripts are written in the &stap; scripting language, are "
"then compiled to C-code kernel modules and inserted into the kernel. The "
"scripts can be designed to extract, filter and summarize data, thus allowing "
"the diagnosis of complex performance problems or functional problems. &stap; "
"provides information similar to the output of tools like <command>netstat</"
"command>, <command>ps</command>, <command>top</command>, and "
"<command>iostat</command>. However, more filtering and analysis options can "
"be used for the collected information."
msgstr ""

#. Tag: title
#: tuning_systemtap.xml:108
#, no-c-format
msgid "Conceptual Overview"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:110
#, no-c-format
msgid ""
"Each time you run a &stap; script, a &stap; session is started. A number of "
"passes are done on the script before it is allowed to run. Then, the script "
"is compiled into a kernel module and loaded. If the script has been executed "
"before and no system components have changed (for example, different "
"compiler or kernel versions, library paths, or script contents), &stap; does "
"not compile the script again. Instead, it uses the <filename>*.c</filename> "
"and <filename>*.ko</filename> data stored in the &stap; cache (<filename>~/."
"systemtap</filename>). The module is unloaded when the tap has finished "
"running. For an example, see the test run in <xref linkend=\"sec.tuning."
"systemtap.setup\"/> and the respective explanation."
msgstr ""

#. Tag: title
#: tuning_systemtap.xml:126
#, no-c-format
msgid "&stap; Scripts"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:127
#, no-c-format
msgid ""
"&stap; usage is based on &stap; scripts (<filename>*.stp</filename>). They "
"tell &stap; which type of information to collect, and what to do once that "
"information is collected. The scripts are written in the &stap; scripting "
"language that is similar to AWK and C. For the language definition, see "
"<link xlink:href=\"http://sourceware.org/systemtap/langref/\"></link>. A lot "
"of useful example scripts are available from <link xlink:href=\"http://www."
"sourceware.org/systemtap/examples/\"></link>."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:137
#, no-c-format
msgid ""
"The essential idea behind a &stap; script is to name <literal>events</"
"literal>, and to give them <literal>handlers</literal>. When &stap; runs the "
"script, it monitors for certain events. When an event occurs, the Linux "
"kernel runs the handler as a sub-routine, then resumes. Thus, events serve "
"as the triggers for handlers to run. Handlers can record specified data and "
"print it in a certain manner."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:145
#, no-c-format
msgid ""
"The &stap; language only uses a few data types (integers, strings, and "
"associative arrays of these), and full control structures (blocks, "
"conditionals, loops, functions). It has a lightweight punctuation "
"(semicolons are optional) and does not need detailed declarations (types are "
"inferred and checked automatically)."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:152
#, no-c-format
msgid ""
"For more information about &stap; scripts and their syntax, refer to <xref "
"linkend=\"sec.tuning.systemtap.syntax\"/> and to the <command>stapprobes</"
"command> and <command>stapfuncs</command> man pages, that are available with "
"the <systemitem class=\"resource\">systemtap-docs</systemitem> package."
msgstr ""

#. Tag: title
#: tuning_systemtap.xml:162
#, no-c-format
msgid "Tapsets"
msgstr ""

#. Tag: remark
#: tuning_systemtap.xml:164
#, no-c-format
msgid ""
"sknorr, 2014-08-21: \"tapsets are a library\" sounds wrong... to me, it "
"would make more sense if there was a \"library of tapsets,\" i.e. a "
"collection of systemtap scripts."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:166
#, no-c-format
msgid ""
"Tapsets are a library of pre-written probes and functions that can be used "
"in &stap; scripts. When a user runs a &stap; script, &stap; checks the "
"script's probe events and handlers against the tapset library. &stap; then "
"loads the corresponding probes and functions before translating the script "
"to C. Like &stap; scripts themselves, tapsets use the file name extension "
"<filename>*.stp</filename>."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:176
#, no-c-format
msgid ""
"However, unlike &stap; scripts, tapsets are not meant for direct execution. "
"They constitute the library from which other scripts can pull definitions. "
"Thus, the tapset library is an abstraction layer designed to make it easier "
"for users to define events and functions. Tapsets provide aliases for "
"functions that users could want to specify as an event. Knowing the proper "
"alias is often easier than remembering specific kernel functions that might "
"vary between kernel versions."
msgstr ""

#. Tag: title
#: tuning_systemtap.xml:188
#, no-c-format
msgid "Commands and Privileges"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:189
#, no-c-format
msgid ""
"The main commands associated with &stap; are <command>stap</command> and "
"<command>staprun</command>. To execute them, you either need &rootuser; "
"privileges or must be a member of the <systemitem class=\"groupname"
"\">stapdev</systemitem> or <systemitem class=\"groupname\">stapusr</"
"systemitem> group."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:201
#, no-c-format
msgid ""
"&stap; front-end. Runs a &stap; script (either from file, or from standard "
"input). It translates the script into C code, compiles it, and loads the "
"resulting kernel module into a running Linux kernel. Then, the requested "
"system trace or probe functions are performed."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:214
#, no-c-format
msgid ""
"&stap; back-end. Loads and unloads kernel modules produced by the &stap; "
"front-end."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:222
#, no-c-format
msgid ""
"For a list of options for each command, use <option>--help</option>. For "
"details, refer to the <command>stap</command> and the <command>staprun</"
"command> man pages."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:242
#, no-c-format
msgid ""
"To avoid giving &rootuser; access to users solely to enable them to work "
"with &stap;, use one of the following &stap; groups. They are not available "
"by default on &sle;, but you can create the groups and modify the access "
"rights accordingly. Also adjust the permissions of the <command>staprun</"
"command> command if the security implications are appropriate for your "
"environment."
msgstr ""

#. Tag: systemitem
#: tuning_systemtap.xml:253
#, no-c-format
msgid "stapdev"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:256
#, no-c-format
msgid ""
"Members of this group can run &stap; scripts with <command>stap</command>, "
"or run &stap; instrumentation modules with <command>staprun</command>. As "
"running <command>stap</command> involves compiling scripts into kernel "
"modules and loading them into the kernel, members of this group still have "
"effective &rootuser; access."
msgstr ""

#. Tag: systemitem
#: tuning_systemtap.xml:267
#, no-c-format
msgid "stapusr"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:270
#, no-c-format
msgid ""
"Members of this group are only allowed to run &stap; instrumentation modules "
"with <command>staprun</command>. In addition, they can only run those "
"modules from <filename>/lib/modules/<replaceable>kernel_version</"
"replaceable>/systemtap/</filename>. This directory must be owned by "
"&rootuser; and must only be writable for the &rootuser; user."
msgstr ""

#. Tag: title
#: tuning_systemtap.xml:284
#, no-c-format
msgid "Important Files and Directories"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:285
#, no-c-format
msgid ""
"The following list gives an overview of the &stap; main files and "
"directories."
msgstr ""

#. Tag: filename
#: tuning_systemtap.xml:291
#, no-c-format
msgid "/lib/modules/<replaceable>kernel_version</replaceable>/systemtap/"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:294
#, no-c-format
msgid "Holds the &stap; instrumentation modules."
msgstr ""

#. Tag: filename
#: tuning_systemtap.xml:300
#, no-c-format
msgid "/usr/share/systemtap/tapset/"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:303
#, no-c-format
msgid "Holds the standard library of tapsets."
msgstr ""

#. Tag: filename
#: tuning_systemtap.xml:309
#, no-c-format
msgid "/usr/share/doc/packages/systemtap/examples"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:312
#, no-c-format
msgid ""
"Holds several example &stap; scripts for various purposes. Only available if "
"the <systemitem class=\"resource\">systemtap-docs</systemitem> package is "
"installed."
msgstr ""

#. Tag: filename
#: tuning_systemtap.xml:321
#, no-c-format
msgid "~/.systemtap/cache"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:324
#, no-c-format
msgid "Data directory for cached &stap; files."
msgstr ""

#. Tag: filename
#: tuning_systemtap.xml:330
#, no-c-format
msgid "/tmp/stap*"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:333
#, no-c-format
msgid ""
"Temporary directory for &stap; files, including translated C code and kernel "
"object."
msgstr ""

#. Tag: title
#: tuning_systemtap.xml:405
#, no-c-format
msgid "Installation and Setup"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:407
#, no-c-format
msgid ""
"As &stap; needs information about the kernel, some additional kernel-related "
"packages must be installed. For each kernel you want to probe with &stap;, "
"you need to install a set of the following packages. This set should exactly "
"match the kernel version and flavor (indicated by <literal>*</literal> in "
"the overview below)."
msgstr ""

#. Tag: title
#: tuning_systemtap.xml:419
#, no-c-format
msgid "Repository for Packages with Debugging Information"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:420
#, no-c-format
msgid ""
"If you subscribed your system for online updates, you can find "
"<quote>debuginfo</quote> packages in the <literal>*-Debuginfo-Updates</"
"literal> online installation repository relevant for &productname; "
"&productnumber;. Use &yast; to enable the repository."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:443
#, no-c-format
msgid ""
"For the classic &stap; setup, install the following packages (using either "
"&yast; or <command>zypper</command>)."
msgstr ""

#. Tag: systemitem
#: tuning_systemtap.xml:452
#, no-c-format
msgid "systemtap"
msgstr ""

#. Tag: systemitem
#: tuning_systemtap.xml:457
#, no-c-format
msgid "systemtap-server"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:461
#, no-c-format
msgid "<systemitem class=\"resource\">systemtap-docs</systemitem> (optional)"
msgstr ""

#. Tag: systemitem
#: tuning_systemtap.xml:467
#, no-c-format
msgid "kernel-*-base"
msgstr ""

#. Tag: systemitem
#: tuning_systemtap.xml:474
#, no-c-format
msgid "kernel-*-debuginfo"
msgstr ""

#. Tag: systemitem
#: tuning_systemtap.xml:479
#, no-c-format
msgid "kernel-*-devel"
msgstr ""

#. Tag: systemitem
#: tuning_systemtap.xml:484
#, no-c-format
msgid "kernel-source-*"
msgstr ""

#. Tag: systemitem
#: tuning_systemtap.xml:489
#, no-c-format
msgid "<systemitem>gcc</systemitem>"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:497
#, no-c-format
msgid ""
"To get access to the man pages and to a helpful collection of example &stap; "
"scripts for various purposes, additionally install the <systemitem class="
"\"resource\">systemtap-docs</systemitem> package."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:503
#, no-c-format
msgid ""
"To check if all packages are correctly installed on the machine and if "
"&stap; is ready to use, execute the following command as &rootuser;."
msgstr ""

#. Tag: screen
#: tuning_systemtap.xml:509
#, no-c-format
msgid "stap -v -e 'probe vfs.read {printf(\"read performed\\n\"); exit()}'"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:511
#, no-c-format
msgid ""
"It probes the currently used kernel by running a script and returning an "
"output. If the output is similar to the following, &stap; is successfully "
"deployed and ready to use:"
msgstr ""

#. Tag: screen
#: tuning_systemtap.xml:517
#, no-c-format
msgid ""
"<?dbsuse-fo font-size=\"0.71em\"?>Pass <co xml:id=\"co.tuning.stap.pass1\"/"
">: parsed user script and 59 library script(s) in 80usr/0sys/214real ms.\n"
"Pass <co xml:id=\"co.tuning.stap.pass2\"/>: analyzed script: 1 probe(s), 11 "
"function(s), 2 embed(s), 1 global(s) in\n"
" 140usr/20sys/412real ms.\n"
"Pass <co xml:id=\"co.tuning.stap.pass3\"/>: translated to C into\n"
" \"/tmp/stapDwEk76/stap_1856e21ea1c246da85ad8c66b4338349_4970.c\" in "
"160usr/0sys/408real ms.\n"
"Pass <co xml:id=\"co.tuning.stap.pass4\"/>: compiled C into "
"\"stap_1856e21ea1c246da85ad8c66b4338349_4970.ko\" in\n"
" 2030usr/360sys/10182real ms.\n"
"Pass <co xml:id=\"co.tuning.stap.pass5\"/>: starting run.\n"
" read performed\n"
"Pass <xref linkend=\"co.tuning.stap.pass5\"/>: run completed in "
"10usr/20sys/257real ms."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:521
#, no-c-format
msgid ""
"Checks the script against the existing tapset library in <filename>/usr/"
"share/systemtap/tapset/</filename> for any tapsets used. Tapsets are scripts "
"that form a library of pre-written probes and functions that can be used in "
"&stap; scripts."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:529
#, no-c-format
msgid "Examines the script for its components."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:534
#, no-c-format
msgid ""
"Translates the script to C. Runs the system C compiler to create a kernel "
"module from it. Both the resulting C code (<filename>*.c</filename>) and the "
"kernel module (<filename>*.ko</filename>) are stored in the &stap; cache, "
"<filename>~/.systemtap</filename>."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:543
#, no-c-format
msgid ""
"Loads the module and enables all the probes (events and handlers) in the "
"script by hooking into the kernel. The event being probed is a Virtual File "
"System (VFS) read. As the event occurs on any processor, a valid handler is "
"executed (prints the text <literal>read performed</literal>) and closed with "
"no errors."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:552
#, no-c-format
msgid ""
"After the &stap; session is terminated, the probes are disabled, and the "
"kernel module is unloaded."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:559
#, no-c-format
msgid ""
"In case any error messages appear during the test, check the output for "
"hints about any missing packages and make sure they are installed correctly. "
"Rebooting and loading the appropriate kernel may also be needed."
msgstr ""

#. Tag: remark
#: tuning_systemtap.xml:564
#, no-c-format
msgid ""
"jw 2010-09-23, while I am at it: I have two useful smoke tests, to verify if "
"an installation is working, see http://docserv.suse.de/HOWTO/systemtap If "
"you install systemtap on an older system, the debuginfo and devel packages "
"are likely to be newer than your installed kernel. Finding the correct "
"versions for a given kernel might be challenging. I usually circumvent this "
"by upgrading the kernel."
msgstr ""

#. Tag: title
#: tuning_systemtap.xml:1222
#, no-c-format
msgid "Script Syntax"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1224
#, no-c-format
msgid "&stap; scripts consist of the following two components:"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1233
#, no-c-format
msgid ""
"Name the kernel events at the associated handler should be executed. "
"Examples for events are entering or exiting a certain function, a timer "
"expiring, or starting or terminating a session."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1244
#, no-c-format
msgid ""
"Series of script language statements that specify the work to be done "
"whenever a certain event occurs. This normally includes extracting data from "
"the event context, storing them into internal variables, or printing results."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1254
#, no-c-format
msgid ""
"An event and its corresponding handler is collectively called a "
"<literal>probe</literal>. &stap; events are also called <literal>probe "
"points</literal>. A probe's handler is also called a <literal>probe body</"
"literal>."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1261
#, no-c-format
msgid ""
"Comments can be inserted anywhere in the &stap; script in various styles: "
"using either <literal>#</literal>, <literal>/* */</literal>, or <literal>//</"
"literal> as marker."
msgstr ""

#. Tag: title
#: tuning_systemtap.xml:1268
#, no-c-format
msgid "Probe Format"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1269
#, no-c-format
msgid ""
"A &stap; script can have multiple probes. They must be written in the "
"following format:"
msgstr ""

#. Tag: screen
#: tuning_systemtap.xml:1273
#, no-c-format
msgid ""
"probe <replaceable>event</replaceable> {<replaceable>statements</"
"replaceable>}"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1274
#, no-c-format
msgid ""
"Each probe has a corresponding statement block. This statement block must be "
"enclosed in <literal>{ }</literal> and contains the statements to be "
"executed per event."
msgstr ""

#. Tag: title
#: tuning_systemtap.xml:1280
#, no-c-format
msgid "Simple &stap; Script"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1281
#, no-c-format
msgid "The following example shows a simple &stap; script."
msgstr ""

#. Tag: screen
#: tuning_systemtap.xml:1284
#, no-c-format
msgid ""
"probe<co xml:id=\"co.tuning.stap.probe\"/> begin<co xml:id=\"co.tuning.stap."
"event.begin\"/>\n"
"{<co xml:id=\"co.tuning.stap.handler.start\"/>\n"
"   printf<co xml:id=\"co.tuning.stap.handler.function.printf\"/> (\"hello "
"world\\n\")<co xml:id=\"co.tuning.stap.handler.string\"/>\n"
"   exit ()<co xml:id=\"co.tuning.stap.handler.function.exit\"/>\n"
"}<co xml:id=\"co.tuning.stap.handler.end\"/>"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1287
#, no-c-format
msgid "Start of the probe."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1292
#, no-c-format
msgid "Event <literal>begin</literal> (the start of the &stap; session)."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1297
#, no-c-format
msgid "Start of the handler definition, indicated by <literal>{</literal>."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1302
#, no-c-format
msgid ""
"First function defined in the handler: the <literal>printf</literal> "
"function."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1308
#, no-c-format
msgid ""
"String to be printed by the <literal>printf</literal> function, followed by "
"a line break (<literal>/n</literal>)."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1314
#, no-c-format
msgid ""
"Second function defined in the handler: the <literal>exit()</literal> "
"function. Note that the &stap; script will continue to run until the "
"<literal>exit()</literal> function executes. If you want to stop the "
"execution of the script before, stop it manually by pressing <keycombo> "
"<keycap function=\"control\"></keycap> <keycap>C</keycap> </keycombo>."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1324
#, no-c-format
msgid "End of the handler definition, indicated by <literal>}</literal>."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1329
#, no-c-format
msgid ""
"The event <literal>begin</literal> <xref linkend=\"co.tuning.stap.event.begin"
"\" xrefstyle=\"select:label nopage\"/> (the start of the &stap; session) "
"triggers the handler enclosed in <literal>{ }</literal>. Here, that is the "
"<literal>printf</literal> function <xref linkend=\"co.tuning.stap.handler."
"function.printf\" xrefstyle=\"select:label nopage\"/>. In this case, it "
"prints <literal>hello world</literal> followed by a new line <xref linkend="
"\"co.tuning.stap.handler.string\" xrefstyle=\"select:label nopage\"/>. Then, "
"the script exits."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1342
#, no-c-format
msgid ""
"If your statement block holds several statements, &stap; executes these "
"statements in sequence&mdash;you do not need to insert special separators or "
"terminators between multiple statements. A statement block can also be "
"nested within another statement blocks. Generally, statement blocks in "
"&stap; scripts use the same syntax and semantics as in the C programming "
"language."
msgstr ""

#. Tag: title
#: tuning_systemtap.xml:1353
#, no-c-format
msgid "&stap; Events (Probe Points)"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1354
#, no-c-format
msgid "&stap; supports several built-in events."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1357
#, no-c-format
msgid ""
"The general event syntax is a dotted-symbol sequence. This allows a "
"breakdown of the event namespace into parts. Each component identifier may "
"be parametrized by a string or number literal, with a syntax like a function "
"call. A component may include a <literal>*</literal> character, to expand to "
"other matching probe points. A probe point may be followed by a <literal>?</"
"literal> character, to indicate that it is optional, and that no error "
"should result if it fails to expand. <remark>tonyj 2010-05-8: Maybe an "
"example? There are lots of them in syscalls.stp tapset (/usr/share/ "
"systemptap/tapset/syscalls.stp). - taroth 2010-05-10: for next revision, no "
"time left now</remark> Alternately, a probe point may be followed by a "
"<literal>!</literal> character to indicate that it is both optional and "
"sufficient."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1371
#, no-c-format
msgid ""
"&stap; supports multiple events per probe&mdash;they need to be separated by "
"a comma (<literal>,</literal>). If multiple events are specified in a single "
"probe, &stap; will execute the handler when any of the specified events "
"occur."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1377
#, no-c-format
msgid "In general, events can be classified into the following categories:"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1382
#, no-c-format
msgid ""
"Synchronous events: Occur when any process executes an instruction at a "
"particular location in kernel code. This gives other events a reference "
"point (instruction address) from which more contextual data may be available."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1388
#, no-c-format
msgid ""
"An example for a synchronous event is <literal>vfs."
"<replaceable>file_operation</replaceable></literal>: The entry to the "
"<replaceable>file_operation</replaceable> event for Virtual File System "
"(VFS). For example, in <xref linkend=\"sec.tuning.systemtap.setup\"/>, "
"<literal>read</literal> is the <replaceable>file_operation</replaceable> "
"event used for VFS."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1404
#, no-c-format
msgid ""
"Asynchronous events: Not tied to a particular instruction or location in "
"code. This family of probe points consists mainly of counters, timers, and "
"similar constructs."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1409
#, no-c-format
msgid ""
"Examples for asynchronous events are: <literal>begin</literal> (start of a "
"&stap; session&mdash;when a &stap; script is run, <literal>end</literal> "
"(end of a &stap; session), or timer events. Timer events specify a handler "
"to be executed periodically, like <literal>example timer."
"s(<replaceable>seconds</replaceable>)</literal>, or <literal>timer."
"ms(<replaceable>milliseconds</replaceable>)</literal>."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1418
#, no-c-format
msgid ""
"When used in conjunction with other probes that collect information, timer "
"events allow you to print out periodic updates and see how that information "
"changes over time."
msgstr ""

#. Tag: title
#: tuning_systemtap.xml:1426
#, no-c-format
msgid "Probe with Timer Event"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1427
#, no-c-format
msgid ""
"For example, the following probe would print the text <quote>hello world</"
"quote> every 4 seconds:"
msgstr ""

#. Tag: screen
#: tuning_systemtap.xml:1431
#, no-c-format
msgid ""
"probe timer.s(4)\n"
"{\n"
"   printf(\"hello world\\n\")\n"
"}"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1433
#, no-c-format
msgid ""
"For detailed information about supported events, refer to the "
"<command>stapprobes</command> man page. The <citetitle>See Also</citetitle> "
"section of the man page also contains links to other man pages that discuss "
"supported events for specific subsystems and components."
msgstr ""

#. Tag: title
#: tuning_systemtap.xml:1443
#, no-c-format
msgid "&stap; Handlers (Probe Body)"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1444
#, no-c-format
msgid ""
"Each &stap; event is accompanied by a corresponding handler defined for that "
"event, consisting of a statement block."
msgstr ""

#. Tag: title
#: tuning_systemtap.xml:1449
#, no-c-format
msgid "Functions"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1450
#, no-c-format
msgid ""
"If you need the same set of statements in multiple probes, you can place "
"them in a function for easy reuse. Functions are defined by the keyword "
"<literal>function</literal> followed by a name. They take any number of "
"string or numeric arguments (by value) and may return a single string or "
"number."
msgstr ""

#. Tag: screen
#: tuning_systemtap.xml:1457
#, no-c-format
msgid ""
"function <replaceable>function_name</replaceable>(<replaceable>arguments</"
"replaceable>) {<replaceable>statements</replaceable>}\n"
"probe <replaceable>event</replaceable> {<replaceable>function_name</"
"replaceable>(<replaceable>arguments</replaceable>)}"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1458
#, no-c-format
msgid ""
"The statements in <replaceable>function_name</replaceable> are executed when "
"the probe for <replaceable>event</replaceable> executes. The "
"<replaceable>arguments</replaceable> are optional values passed into the "
"function."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1464
#, no-c-format
msgid "Functions can be defined anywhere in the script. They may take any"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1467
#, no-c-format
msgid ""
"One of the functions needed very often was already introduced in <xref "
"linkend=\"ex.tuning.stap.simple\"/>: the <literal>printf</literal> function "
"for printing data in a formatted way. When using the <literal>printf</"
"literal> function, you can specify how arguments should be printed by using "
"a format string. The format string is included in quotation marks and can "
"contain further format specifiers, introduced by a <literal>%</literal> "
"character."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1476
#, no-c-format
msgid ""
"Which format strings to use depends on your list of arguments. Format "
"strings can have multiple format specifiers&mdash;each matching a "
"corresponding argument. Multiple arguments can be separated by a comma."
msgstr ""

#. Tag: title
#: tuning_systemtap.xml:1482
#, no-c-format
msgid "<literal>printf</literal> Function with Format Specifiers"
msgstr ""

#. Tag: screen
#: tuning_systemtap.xml:1483
#, no-c-format
msgid ""
"printf (\"<co xml:id=\"co.tuning.stap.formatstring.start\"/>%s<co xml:id="
"\"co.tuning.stap.string.spec\"/>(%d<co xml:id=\"co.tuning.stap.int.spec\"/>) "
"open\\n<co xml:id=\"co.tuning.stap.formatstring.end\"/>\", execname(), pid())"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1486
#, no-c-format
msgid "Start of the format string, indicated by <literal>\"</literal>."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1491
#, no-c-format
msgid "String format specifier."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1496
#, no-c-format
msgid "Integer format specifier."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1501
#, no-c-format
msgid "End of the format string, indicated by <literal>\"</literal>."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1507
#, no-c-format
msgid ""
"The example above prints the current executable name (<literal>execname()</"
"literal>) as a string and the process ID (<literal>pid()</literal>) as an "
"integer in brackets. Then, a space, the word <literal>open</literal> and a "
"line break follow:"
msgstr ""

#. Tag: screen
#: tuning_systemtap.xml:1513
#, no-c-format
msgid ""
"[...]\n"
"vmware-guestd(2206) open\n"
"hald(2360) open\n"
"[...]"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1514
#, no-c-format
msgid ""
"Apart from the two functions <literal>execname()</literal>and "
"<literal>pid()</literal>) used in <xref linkend=\"ex.tuning.stap.printf."
"formatspec\"/>, a variety of other functions can be used as <literal>printf</"
"literal> arguments."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1520
#, no-c-format
msgid "Among the most commonly used &stap; functions are the following:"
msgstr ""

#. Tag: term
#: tuning_systemtap.xml:1525
#, no-c-format
msgid "tid()"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1527
#, no-c-format
msgid "ID of the current thread."
msgstr ""

#. Tag: term
#: tuning_systemtap.xml:1533
#, no-c-format
msgid "pid()"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1535
#, no-c-format
msgid "Process ID of the current thread."
msgstr ""

#. Tag: term
#: tuning_systemtap.xml:1541
#, no-c-format
msgid "uid()"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1543
#, no-c-format
msgid "ID of the current user."
msgstr ""

#. Tag: term
#: tuning_systemtap.xml:1549
#, no-c-format
msgid "cpu()"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1551
#, no-c-format
msgid "Current CPU number."
msgstr ""

#. Tag: term
#: tuning_systemtap.xml:1557
#, no-c-format
msgid "execname()"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1559
#, no-c-format
msgid "Name of the current process."
msgstr ""

#. Tag: term
#: tuning_systemtap.xml:1565
#, no-c-format
msgid "gettimeofday_s()"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1567
#, no-c-format
msgid "Number of seconds since Unix epoch (January 1, 1970)."
msgstr ""

#. Tag: term
#: tuning_systemtap.xml:1573
#, no-c-format
msgid "ctime()"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1575
#, no-c-format
msgid "Convert time into a string."
msgstr ""

#. Tag: term
#: tuning_systemtap.xml:1581
#, no-c-format
msgid "pp()"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1583
#, no-c-format
msgid "String describing the probe point currently being handled."
msgstr ""

#. Tag: term
#: tuning_systemtap.xml:1589
#, no-c-format
msgid "thread_indent()"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1591
#, no-c-format
msgid ""
"Useful function for organizing print results. It (internally) stores an "
"indentation counter for each thread (<literal>tid()</literal>). The function "
"takes one argument, an indentation delta, indicating how many spaces to add "
"or remove from the thread's indentation counter. It returns a string with "
"some generic trace data along with an appropriate number of indentation "
"spaces. The generic data returned includes a time stamp (number of "
"microseconds since the initial indentation for the thread), a process name, "
"and the thread ID itself. This allows you to identify what functions were "
"called, who called them, and how long they took."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1603
#, no-c-format
msgid ""
"Call entries and exits often do not immediately precede each other "
"(otherwise it would be easy to match them). In between a first call entry "
"and its exit, usually several other call entries and exits are made. The "
"indentation counter helps you match an entry with its corresponding exit as "
"it indents the next function call in case it is <emphasis>not</emphasis> the "
"exit of the previous one. For an example &stap; script using "
"<literal>thread_indent()</literal> and the respective output, refer to the "
"<citetitle>&stap; Tutorial</citetitle>: <link xlink:href=\"http://sourceware."
"org/systemtap/tutorial/Tracing.html#fig:socket-trace\"></link>."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1618
#, no-c-format
msgid ""
"For more information about supported &stap; functions, refer to the "
"<command>stapfuncs</command> man page."
msgstr ""

#. Tag: title
#: tuning_systemtap.xml:1624
#, no-c-format
msgid "Other Basic Constructs"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1625
#, no-c-format
msgid ""
"Apart from functions, you can use several other common constructs in &stap; "
"handlers, including variables, conditional statements (like <literal>if</"
"literal>/<literal>else</literal>, <literal>while</literal> loops, "
"<literal>for</literal> loops, arrays or command line arguments."
msgstr ""

#. Tag: title
#: tuning_systemtap.xml:1632
#, no-c-format
msgid "Variables"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1633
#, no-c-format
msgid ""
"Variables may be defined anywhere in the script. To define one, simply "
"choose a name and assign a value from a function or expression to it:"
msgstr ""

#. Tag: screen
#: tuning_systemtap.xml:1637
#, no-c-format
msgid "foo = gettimeofday( )"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1638
#, no-c-format
msgid ""
"Then you can use the variable in an expression. From the type of values "
"assigned to the variable, &stap; automatically infers the type of each "
"identifier (string or number). Any inconsistencies will be reported as "
"errors. In the example above, <literal>foo</literal> would automatically be "
"classified as a number and could be printed via <literal>printf()</literal> "
"with the integer format specifier (<literal>%d</literal>)."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1647
#, no-c-format
msgid ""
"However, by default, variables are local to the probe they are used in: They "
"are initialized, used and disposed of at each handler evocation. To share "
"variables between probes, declare them global anywhere in the script. To do "
"so, use the <literal>global</literal> keyword outside of the probes:"
msgstr ""

#. Tag: title
#: tuning_systemtap.xml:1655
#, no-c-format
msgid "Using Global Variables"
msgstr ""

#. Tag: screen
#: tuning_systemtap.xml:1656
#, no-c-format
msgid ""
"global count_jiffies, count_ms\n"
"probe timer.jiffies(100) { count_jiffies ++ }\n"
"probe timer.ms(100) { count_ms ++ }\n"
"probe timer.ms(12345)\n"
"{\n"
"  hz=(1000*count_jiffies) / count_ms\n"
"  printf (\"jiffies:ms ratio %d:%d =&gt; CONFIG_HZ=%d\\n\",\n"
"    count_jiffies, count_ms, hz)\n"
"  exit ()\n"
"  }"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1657
#, no-c-format
msgid ""
"This example script computes the CONFIG_HZ setting of the kernel by using "
"timers that count jiffies and milliseconds, then computing accordingly. (A "
"jiffy is the duration of one tick of the system timer interrupt. It is not "
"an absolute time interval unit, since its duration depends on the clock "
"interrupt frequency of the particular hardware platform). With the "
"<literal>global</literal> statement it is possible to use the variables "
"<literal>count_jiffies</literal> and <literal>count_ms</literal> also in the "
"probe <literal>timer.ms(12345)</literal>. With <literal>++</literal> the "
"value of a variable is incremented by <literal>1</literal>."
msgstr ""

#. Tag: title
#: tuning_systemtap.xml:1672
#, no-c-format
msgid "Conditional Statements"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1673
#, no-c-format
msgid ""
"There are several conditional statements that you can use in &stap; scripts. "
"The following are probably the most common:"
msgstr ""

#. Tag: term
#: tuning_systemtap.xml:1679
#, no-c-format
msgid "If/Else Statements"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1681 tuning_systemtap.xml:1709
#, no-c-format
msgid "They are expressed in the following format:"
msgstr ""

#. Tag: screen
#: tuning_systemtap.xml:1684
#, no-c-format
msgid ""
"if (<replaceable>condition</replaceable>)<co xml:id=\"co.tuning.systemtap."
"cond.if\"/><replaceable>statement1</replaceable><co xml:id=\"co.tuning."
"systemtap.cond.if.statement1\"/>\n"
"else<co xml:id=\"co.tuning.systemtap.cond.else\"/><replaceable>statement2</"
"replaceable><co xml:id=\"co.tuning.systemtap.cond.if.statement2\"/>"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1685
#, no-c-format
msgid ""
"The <literal>if</literal> statement compares an integer-valued expression to "
"zero. If the condition expression <xref linkend=\"co.tuning.systemtap.cond.if"
"\" xrefstyle=\"select:label nopage\"/> is non-zero, the first statement "
"<xref linkend=\"co.tuning.systemtap.cond.if.statement1\" xrefstyle=\"select:"
"label nopage\"/> is executed. If the condition expression is zero, the "
"second statement <xref linkend=\"co.tuning.systemtap.cond.if.statement2\" "
"xrefstyle=\"select:label nopage\"/> is executed. The else clause (<xref "
"linkend=\"co.tuning.systemtap.cond.else\" xrefstyle=\"select:label nopage\"/"
"> and <xref linkend=\"co.tuning.systemtap.cond.if.statement2\" xrefstyle="
"\"select:label nopage\"/>) is optional. Both <xref linkend=\"co.tuning."
"systemtap.cond.if.statement1\" xrefstyle=\"select:label nopage\"/> and <xref "
"linkend=\"co.tuning.systemtap.cond.if.statement2\" xrefstyle=\"select:label "
"nopage\"/> can also be statement blocks."
msgstr ""

#. Tag: term
#: tuning_systemtap.xml:1707
#, no-c-format
msgid "While Loops"
msgstr ""

#. Tag: screen
#: tuning_systemtap.xml:1712
#, no-c-format
msgid ""
"while (<replaceable>condition</replaceable>)<co xml:id=\"co.tuning.systemtap."
"cond.while\"/><replaceable>statement</replaceable><co xml:id=\"co.tuning."
"systemtap.cond.while.statement\"/>"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1713
#, no-c-format
msgid ""
"As long as <literal>condition</literal> is non-zero, the statement <xref "
"linkend=\"co.tuning.systemtap.cond.while.statement\" xrefstyle=\"select:"
"label nopage\"/> is executed. <xref linkend=\"co.tuning.systemtap.cond.while."
"statement\" xrefstyle=\"select:label nopage\"/> can also be a statement "
"block. It must change a value so <literal>condition</literal> will "
"eventually be zero."
msgstr ""

#. Tag: term
#: tuning_systemtap.xml:1724
#, no-c-format
msgid "For Loops"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1726
#, no-c-format
msgid ""
"They are a shortcut for <literal>while</literal> loops and are expressed in "
"the following format:"
msgstr ""

#. Tag: screen
#: tuning_systemtap.xml:1730
#, no-c-format
msgid ""
"for (<replaceable>initialization</replaceable><co xml:id=\"co.tuning."
"systemtap.cond.for.init\"/>; <replaceable>conditional</replaceable><co xml:"
"id=\"co.tuning.systemtap.cond.for.cond\"/>; <replaceable>increment</"
"replaceable><co xml:id=\"co.tuning.systemtap.cond.for.increment\"/>) "
"statement"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1731
#, no-c-format
msgid ""
"The expression specified in <xref linkend=\"co.tuning.systemtap.cond.for.init"
"\" xrefstyle=\"select:label nopage\"/> is used to initialize a counter for "
"the number of loop iterations and is executed before execution of the loop "
"starts. The execution of the loop continues until the loop condition <xref "
"linkend=\"co.tuning.systemtap.cond.for.cond\" xrefstyle=\"select:label nopage"
"\"/> is false. (This expression is checked at the beginning of each loop "
"iteration). The expression specified in <xref linkend=\"co.tuning.systemtap."
"cond.for.increment\" xrefstyle=\"select:label nopage\"/> is used to "
"increment the loop counter. It is executed at the end of each loop iteration."
msgstr ""

#. Tag: term
#: tuning_systemtap.xml:1747
#, no-c-format
msgid "Conditional Operators"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1749
#, no-c-format
msgid "The following operators can be used in conditional statements:"
msgstr ""

#. Tag: title
#: tuning_systemtap.xml:1753
#, no-c-format
msgid "<title>==:</title>"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1754
#, no-c-format
msgid "Is equal to"
msgstr ""

#. Tag: title
#: tuning_systemtap.xml:1759
#, no-c-format
msgid "<title>!=:</title>"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1760
#, no-c-format
msgid "Is not equal to"
msgstr ""

#. Tag: title
#: tuning_systemtap.xml:1765
#, no-c-format
msgid "&gt;=:"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1766
#, no-c-format
msgid "Is greater than or equal to"
msgstr ""

#. Tag: title
#: tuning_systemtap.xml:1771
#, no-c-format
msgid "&lt;=:"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1772
#, no-c-format
msgid "Is less than or equal to"
msgstr ""

#. Tag: title
#: tuning_systemtap.xml:1784
#, no-c-format
msgid "Example Script"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1786
#, no-c-format
msgid ""
"If you have installed the <systemitem class=\"resource\">systemtap-docs</"
"systemitem> package, you can find several useful &stap; example scripts in "
"<filename>/usr/share/doc/packages/systemtap/examples</filename>."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1793
#, no-c-format
msgid ""
"This section describes a rather simple example script in more detail: "
"<filename>/usr/share/doc/packages/systemtap/examples/network/tcp_connections."
"stp</filename>."
msgstr ""

#. Tag: title
#: tuning_systemtap.xml:1799
#, no-c-format
msgid ""
"Monitoring Incoming TCP Connections with <literal>tcp_connections.stp</"
"literal>"
msgstr ""

#. Tag: screen
#: tuning_systemtap.xml:1800
#, no-c-format
msgid ""
"#! /usr/bin/env stap\n"
"\n"
"probe begin {\n"
"  printf(\"%6s %16s %6s %6s %16s\\n\",\n"
"         \"UID\", \"CMD\", \"PID\", \"PORT\", \"IP_SOURCE\")\n"
"}\n"
"\n"
"probe kernel.function(\"tcp_accept\").return?,\n"
"      kernel.function(\"inet_csk_accept\").return? {\n"
"  sock = $return\n"
"  if (sock != 0)\n"
"    printf(\"%6d %16s %6d %6d %16s\\n\", uid(), execname(), pid(),\n"
"           inet_get_local_port(sock), inet_get_ip_source(sock))\n"
"}"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1803
#, no-c-format
msgid ""
"This &stap; script monitors the incoming TCP connections and helps to "
"identify unauthorized or unwanted network access requests in real time. It "
"shows the following information for each new incoming TCP connection "
"accepted by the computer:"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1812
#, no-c-format
msgid "User ID (<literal>UID</literal>)"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1817
#, no-c-format
msgid "Command accepting the connection (<literal>CMD</literal>)"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1822
#, no-c-format
msgid "Process ID of the command (<literal>PID</literal>)"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1827
#, no-c-format
msgid "Port used by the connection (<literal>PORT</literal>)"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1832
#, no-c-format
msgid ""
"IP address from which the TCP connection originated (<literal>IP_SOUCE</"
"literal>)"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1839
#, no-c-format
msgid "To run the script, execute"
msgstr ""

#. Tag: screen
#: tuning_systemtap.xml:1843
#, no-c-format
msgid ""
"stap&nbsp;/usr/share/doc/packages/systemtap/examples/network/tcp_connections."
"stp"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1845
#, no-c-format
msgid ""
"and follow the output on the screen. To manually stop the script, press "
"<keycombo> <keycap function=\"control\"></keycap> <keycap>C</keycap> </"
"keycombo>."
msgstr ""

#. Tag: title
#: tuning_systemtap.xml:1852
#, no-c-format
msgid "User Space Probing"
msgstr ""

#. Tag: remark
#: tuning_systemtap.xml:1855
#, no-c-format
msgid ""
"taroth 2013-12-05: this will need adjustment for SLE 12 where user-space "
"probes will use uprobes/uretprobes instead (which are in mainline) - "
"according to tonyj everything except itrace is supposed to work"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1857
#, no-c-format
msgid ""
"For debugging user space applications (like DTrace can do), &productname; "
"&productnumber; supports user space probing with &stap;: Custom probe points "
"can be inserted in any user space application. Thus, &stap; lets you use "
"both Kernel- and user space probes to debug the behavior of the whole system."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1865
#, no-c-format
msgid ""
"To get the required utrace infrastructure and the uprobes Kernel module for "
"user space probing, you need to install the <systemitem class=\"resource"
"\">kernel-trace</systemitem> package in addition to the packages listed in "
"<xref linkend=\"sec.tuning.systemtap.setup\"/>."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1873
#, no-c-format
msgid ""
"<command>utrace</command> implements a framework for controlling user space "
"tasks. It provides an interface that can be used by various tracing "
"<quote>engines</quote>, implemented as loadable Kernel modules. The engines "
"register callback functions for specific events, then attach to whichever "
"thread they want to trace. As the callbacks are made from <quote>safe</"
"quote> places in the Kernel, this allows for great leeway in the kinds of "
"processing the functions can do. Various events can be watched via utrace, "
"for example, system call entry and exit, fork(), signals being sent to the "
"task, etc. More details about the utrace infrastructure are available at "
"<link xlink:href=\"http://sourceware.org/systemtap/wiki/utrace\"></link>."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1887
#, no-c-format
msgid ""
"&stap; includes support for probing the entry into and return from a "
"function in user space processes, probing predefined markers in user space "
"code, and monitoring user-process events."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1893
#, no-c-format
msgid ""
"To check if the currently running Kernel provides the needed utrace support, "
"use the following command:"
msgstr ""

#. Tag: screen
#: tuning_systemtap.xml:1898
#, no-c-format
msgid "grep CONFIG_UTRACE /boot/config-`uname -r`"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1900
#, no-c-format
msgid ""
"For more details about user space probing, refer to <link xlink:href="
"\"https://sourceware.org/systemtap/SystemTap_Beginners_Guide/userspace-"
"probing.html\"></link>."
msgstr ""

#. Tag: title
#: tuning_systemtap.xml:1906
#, no-c-format
msgid "For More Information"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1908
#, no-c-format
msgid ""
"This chapter only provides a short &stap; overview. Refer to the following "
"links for more information about &stap;:"
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1918
#, no-c-format
msgid "&stap; project home page."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1927
#, no-c-format
msgid ""
"Huge collection of useful information about &stap;, ranging from detailed "
"user and developer documentation to reviews and comparisons with other "
"tools, or Frequently Asked Questions and tips. Also contains collections of "
"&stap; scripts, examples and usage stories and lists recent talks and papers "
"about &stap;."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1940
#, no-c-format
msgid ""
"Features a <citetitle>&stap; Tutorial</citetitle>, a <citetitle>&stap; "
"Beginner's Guide</citetitle>, a <citetitle>Tapset Developer's Guide</"
"citetitle>, and a <citetitle>&stap; Language Reference</citetitle> in PDF "
"and HTML format. Also lists the relevant man pages."
msgstr ""

#. Tag: para
#: tuning_systemtap.xml:1951
#, no-c-format
msgid ""
"You can also find the &stap; language reference and &stap; tutorial in your "
"installed system under <filename>/usr/share/doc/packages/systemtap</"
"filename>. Example &stap; scripts are available from the <filename>example</"
"filename> subdirectory."
msgstr ""

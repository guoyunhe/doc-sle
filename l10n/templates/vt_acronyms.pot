# SOME DESCRIPTIVE TITLE.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2017-01-20 18:23+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <kde-i18n-doc@kde.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: vt_acronyms.xml:9
#, no-c-format
msgid "Acronyms"
msgstr ""

#. Tag: glossterm
#: vt_acronyms.xml:16
#, no-c-format
msgid "ACPI"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:18
#, no-c-format
msgid ""
"Advanced Configuration and Power Interface (ACPI) specification provides an "
"open standard for device configuration and power management by the operating "
"system."
msgstr ""

#. Tag: glossterm
#: vt_acronyms.xml:25
#, no-c-format
msgid "<glossterm>AER</glossterm>"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:27
#, no-c-format
msgid "Advanced Error Reporting"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:30
#, no-c-format
msgid ""
"AER is a capability provided by the PCI Express specification which allows "
"for reporting of PCI errors and recovery from some of them."
msgstr ""

#. Tag: glossterm
#: vt_acronyms.xml:36
#, no-c-format
msgid "APIC"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:38
#, no-c-format
msgid ""
"Advanced Programmable Interrupt Controller (APIC) is a family of interrupt "
"controllers."
msgstr ""

#. Tag: glossterm
#: vt_acronyms.xml:44
#, no-c-format
msgid "<glossterm>BDF</glossterm>"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:46
#, no-c-format
msgid "Bus:Device:Function"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:49
#, no-c-format
msgid "Notation used to succinctly describe PCI and PCIe devices."
msgstr ""

#. Tag: glossterm
#: vt_acronyms.xml:54
#, no-c-format
msgid "<glossterm>CG</glossterm>"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:56
#, no-c-format
msgid "Control Groups"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:59
#, no-c-format
msgid ""
"Feature to limit, account and isolate resource usage (CPU, memory, disk I/O, "
"etc.)."
msgstr ""

#. Tag: glossterm
#: vt_acronyms.xml:65
#, no-c-format
msgid "<glossterm>EDF</glossterm>"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:67
#, no-c-format
msgid "Earliest Deadline First"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:70
#, no-c-format
msgid ""
"This scheduler provides weighted CPU sharing in an intuitive way and uses "
"real-time algorithms to ensure time guarantees."
msgstr ""

#. Tag: glossterm
#: vt_acronyms.xml:76
#, no-c-format
msgid "<glossterm>EPT</glossterm>"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:78
#, no-c-format
msgid "Extended Page Tables"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:81
#, no-c-format
msgid ""
"Performance in a virtualized environment is close to that in a native "
"environment. Virtualization does create some overheads, however. These come "
"from the virtualization of the CPU, the <xref linkend=\"gloss.vt.acronym.mmu"
"\"/>, and the I/O devices. In some recent x86 processors AMD and Intel have "
"begun to provide hardware extensions to help bridge this performance gap. In "
"2006, both vendors introduced their first generation hardware support for "
"x86 virtualization with AMD-Virtualization (AMD-V) and IntelÂ® VT-x "
"technologies. Recently Intel introduced its second generation of hardware "
"support that incorporates MMU-virtualization, called Extended Page Tables "
"(EPT). EPT-enabled systems can improve performance compared to using shadow "
"paging for <xref linkend=\"gloss.vt.acronym.mmu\"/> virtualization. EPT "
"increases memory access latencies for a few workloads. This cost can be "
"reduced by effectively using large pages in the guest and the hypervisor."
msgstr ""

#. Tag: glossterm
#: vt_acronyms.xml:100
#, no-c-format
msgid "FLASK"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:102
#, no-c-format
msgid "Flux Advanced Security Kernel"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:105
#, no-c-format
msgid ""
"&xen; implements a type of mandatory access control via a security "
"architecture called FLASK using a module of the same name."
msgstr ""

#. Tag: glossterm
#: vt_acronyms.xml:111
#, no-c-format
msgid "<glossterm>HAP</glossterm>"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:113
#, no-c-format
msgid "High Assurance Platform"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:116
#, no-c-format
msgid ""
"HAP combines hardware and software technologies to improve workstation and "
"network security."
msgstr ""

#. Tag: glossterm
#: vt_acronyms.xml:122
#, no-c-format
msgid "<glossterm>HVM</glossterm>"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:124
#, no-c-format
msgid "Hardware Virtual Machine (commonly called like this by &xen;)."
msgstr ""

#. Tag: glossterm
#: vt_acronyms.xml:129
#, no-c-format
msgid "IOMMU"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:131
#, no-c-format
msgid "Input/Output Memory Management Unit"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:134
#, no-c-format
msgid ""
"IOMMU (AMD* technology) is a memory management unit (<xref linkend=\"gloss."
"vt.acronym.mmu\"/>) that connects a direct memory access-capable (DMA-"
"capable) I/O bus to the main memory."
msgstr ""

#. Tag: glossterm
#: vt_acronyms.xml:141
#, no-c-format
msgid "<glossterm>KSM</glossterm>"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:143
#, no-c-format
msgid "Kernel Same Page Merging"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:146
#, no-c-format
msgid ""
"KSM allows for automatic sharing of identical memory pages between guests to "
"save host memory. &kvm; is optimized to use KSM if enabled on the &vmhost;."
msgstr ""

#. Tag: glossterm
#: vt_acronyms.xml:153
#, no-c-format
msgid "<glossterm>MMU</glossterm>"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:155
#, no-c-format
msgid "Memory Management Unit"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:158
#, no-c-format
msgid ""
"is a computer hardware component responsible for handling accesses to memory "
"requested by the CPU. Its functions include translation of virtual addresses "
"to physical addresses (that is, virtual memory management), memory "
"protection, cache control, bus arbitration and in simpler computer "
"architectures (especially 8-bit systems) bank switching."
msgstr ""

#. Tag: glossterm
#: vt_acronyms.xml:168
#, no-c-format
msgid "<glossterm>PAE</glossterm>"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:170
#, no-c-format
msgid "Physical Address Extension"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:173
#, no-c-format
msgid ""
"32-bit x86 operating systems use Physical Address Extension (PAE) mode to "
"enable addressing of more than 4 GB of physical memory. In PAE mode, page "
"table entries (PTEs) are 64 bits in size."
msgstr ""

#. Tag: glossterm
#: vt_acronyms.xml:180
#, no-c-format
msgid "PCID"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:182
#, no-c-format
msgid "Process-context identifiers"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:185
#, no-c-format
msgid ""
"These are a facility by which a logical processor may cache information for "
"multiple linear-address spaces so that the processor may retain cached "
"information when software switches to a different linear address space. "
"INVPCID instruction is used for fine-grained <xref linkend=\"gloss.vt."
"acronym.tlb\"/> flush, which is benefit for kernel."
msgstr ""

#. Tag: glossterm
#: vt_acronyms.xml:195
#, no-c-format
msgid "PCIe"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:197
#, no-c-format
msgid "Peripheral Component Interconnect Express"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:200
#, no-c-format
msgid ""
"PCIe was designed to replace older PCI, PCI-X and AGP bus standards. PCIe "
"has numerous improvements including a higher maximum system bus throughput, "
"a lower I/O pin count and smaller physical footprint. Moreover it also has a "
"more detailed error detection and reporting mechanism (<xref linkend=\"gloss."
"vt.acronym.aer\"/>), and a native hotplug functionality. It is also backward "
"compatible with PCI."
msgstr ""

#. Tag: glossterm
#: vt_acronyms.xml:210
#, no-c-format
msgid "PSE and PSE36"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:212
#, no-c-format
msgid "Page Size Extended"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:215
#, no-c-format
msgid ""
"PSE refers to a feature of x86 processors that allows for pages larger than "
"the traditional 4 KiB size. PSE-36 capability offers 4 more bits, in "
"addition to the normal 10 bits, which are used inside a page directory entry "
"pointing to a large page. This allows a large page to be located in 36-bit "
"address space."
msgstr ""

#. Tag: glossterm
#: vt_acronyms.xml:224
#, no-c-format
msgid "<glossterm>PT</glossterm>"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:226
#, no-c-format
msgid "Page Table"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:229
#, no-c-format
msgid ""
"A page table is the data structure used by a virtual memory system in a "
"computer operating system to store the mapping between virtual addresses and "
"physical addresses. Virtual addresses are those unique to the accessing "
"process. Physical addresses are those unique to the hardware (RAM)."
msgstr ""

#. Tag: glossterm
#: vt_acronyms.xml:238
#, no-c-format
msgid "<glossterm>QXL</glossterm>"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:240
#, no-c-format
msgid ""
"QXL is a cirrus VGA framebuffer (8M) driver for virtualized environment."
msgstr ""

#. Tag: glossterm
#: vt_acronyms.xml:245
#, no-c-format
msgid "RVI or NPT"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:247
#, no-c-format
msgid "Rapid Virtualization Indexing, Nested Page Tables"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:250
#, no-c-format
msgid ""
"An AMD second generation hardware-assisted virtualization technology for the "
"processor memory management unit (<xref linkend=\"gloss.vt.acronym.mmu\"/>)."
msgstr ""

#. Tag: glossterm
#: vt_acronyms.xml:257
#, no-c-format
msgid "SATA"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:259
#, no-c-format
msgid "Serial ATA"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:262
#, no-c-format
msgid ""
"SATA is a computer bus interface that connects host bus adapters to mass "
"storage devices such as hard disks and optical drives."
msgstr ""

#. Tag: glossterm
#: vt_acronyms.xml:268
#, no-c-format
msgid "Seccomp2-based sandboxing"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:270
#, no-c-format
msgid ""
"Sandboxed environment where only predetermined system calls are permitted "
"for added protection against malicious behavior."
msgstr ""

#. Tag: glossterm
#: vt_acronyms.xml:276
#, no-c-format
msgid "SMEP"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:278
#, no-c-format
msgid "Supervisor Mode Execution Protection"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:281
#, no-c-format
msgid ""
"This prevents the execution of user-mode pages by the Xen hypervisor, making "
"many application-to-hypervisor exploits much harder."
msgstr ""

#. Tag: glossterm
#: vt_acronyms.xml:287
#, no-c-format
msgid "SPICE"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:289
#, no-c-format
msgid "Simple Protocol for Independent Computing Environments"
msgstr ""

#. Tag: glossterm
#: vt_acronyms.xml:294
#, no-c-format
msgid "<glossterm>SXP</glossterm>"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:296
#, no-c-format
msgid "An SXP file is a &xen; Configuration File."
msgstr ""

#. Tag: glossterm
#: vt_acronyms.xml:301
#, no-c-format
msgid "<glossterm>TCG</glossterm>"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:303
#, no-c-format
msgid "Tiny Code Generator"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:306
#, no-c-format
msgid "Instructions are emulated rather than executed by the CPU."
msgstr ""

#. Tag: glossterm
#: vt_acronyms.xml:311
#, no-c-format
msgid "<glossterm>THP</glossterm>"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:313
#, no-c-format
msgid "Transparent Huge Pages"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:316
#, no-c-format
msgid ""
"This allows CPUs to address memory using pages larger than the default 4 KB. "
"This helps reduce memory consumption and CPU cache usage. &kvm; is optimized "
"to use THP (via madvise and opportunistic methods) if enabled on the "
"&vmhost;."
msgstr ""

#. Tag: glossterm
#: vt_acronyms.xml:324
#, no-c-format
msgid "<glossterm>TLB</glossterm>"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:326
#, no-c-format
msgid "Translation Lookaside Buffer"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:329
#, no-c-format
msgid ""
"TLB is a cache that memory management hardware uses to improve virtual "
"address translation speed. All current desktop, notebook, and server "
"processors use a TLB to map virtual and physical address spaces, and it is "
"nearly always present in any hardware that uses virtual memory."
msgstr ""

#. Tag: glossterm
#: vt_acronyms.xml:337
#, no-c-format
msgid "VCPU"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:339
#, no-c-format
msgid "A scheduling entity, containing each state for virtualized CPU."
msgstr ""

#. Tag: glossterm
#: vt_acronyms.xml:344
#, no-c-format
msgid "<glossterm>VDI</glossterm>"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:346
#, no-c-format
msgid "Virtual Desktop Infrastructure"
msgstr ""

#. Tag: glossterm
#: vt_acronyms.xml:351
#, no-c-format
msgid "VFIO"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:353
#, no-c-format
msgid ""
"Since kernel v3.6; a new method of accessing PCI devices from user space "
"called VFIO."
msgstr ""

#. Tag: glossterm
#: vt_acronyms.xml:359
#, no-c-format
msgid "<glossterm>VHS</glossterm>"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:361
#, no-c-format
msgid "Virtualization Host Server"
msgstr ""

#. Tag: glossterm
#: vt_acronyms.xml:366
#, no-c-format
msgid "VMCS"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:368
#, no-c-format
msgid "Virtual Machine Control Structure"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:371
#, no-c-format
msgid ""
"VMX non-root operation and VMX transitions are controlled by a data "
"structure called a virtual-machine control structure (VMCS). Access to the "
"VMCS is managed through a component of processor state called the VMCS "
"pointer (one per logical processor). The value of the VMCS pointer is the 64-"
"bit address of the VMCS. The VMCS pointer is read and written using the "
"instructions VMPTRST and VMPTRLD. The <xref linkend=\"gloss.vt.acronym."
"hypervisor_vmm\"/> configures a VMCS using the VMREAD, VMWRITE, and VMCLEAR "
"instructions. A <xref linkend=\"gloss.vt.acronym.hypervisor_vmm\"/> could "
"use a different VMCS for each virtual machine that it supports. For a "
"virtual machine with multiple logical processors (virtual processors), the "
"<xref linkend=\"gloss.vt.acronym.hypervisor_vmm\"/> could use a different "
"VMCS for each virtual processor."
msgstr ""

#. Tag: glossterm
#: vt_acronyms.xml:388
#, no-c-format
msgid "VMDq"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:390
#, no-c-format
msgid "Virtual Machine Device Queue"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:393
#, no-c-format
msgid ""
"Multi-queue network adapters exist which support multiple VMs at the "
"hardware level, having separate packet queues associated to the different "
"hosted VMs (by means of the IP addresses of the VMs)."
msgstr ""

#. Tag: glossterm
#: vt_acronyms.xml:400
#, no-c-format
msgid "<glossterm>VMM</glossterm>"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:402
#, no-c-format
msgid "Virtual Machine Monitor (Hypervisor)"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:405
#, no-c-format
msgid ""
"When the processor encounters an instruction or event of interest to the "
"Hypervisor (<xref linkend=\"gloss.vt.acronym.hypervisor_vmm\"/>), it exits "
"from guest mode back to the VMM. The VMM emulates the instruction or other "
"event, at a fraction of native speed, and then returns to guest mode. The "
"transitions from guest mode to the VMM and back again are high-latency "
"operations, during which guest execution is completely stalled."
msgstr ""

#. Tag: glossterm
#: vt_acronyms.xml:416
#, no-c-format
msgid "VM root"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:418
#, no-c-format
msgid ""
"will run in <xref linkend=\"gloss.vt.acronym.vmx\"/> root operation and "
"guest software will run in <xref linkend=\"gloss.vt.acronym.vmx\"/> non-root "
"operation. Transitions between <xref linkend=\"gloss.vt.acronym.vmx\"/> root "
"operation and <xref linkend=\"gloss.vt.acronym.vmx\"/> non-root operation "
"are called <xref linkend=\"gloss.vt.acronym.vmx\"/> transitions."
msgstr ""

#. Tag: glossterm
#: vt_acronyms.xml:428
#, no-c-format
msgid "<glossterm>VMX</glossterm>"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:430
#, no-c-format
msgid "Virtual Machine eXtensions"
msgstr ""

#. Tag: glossterm
#: vt_acronyms.xml:435
#, no-c-format
msgid "VPID"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:437
#, no-c-format
msgid ""
"New support for software control of <xref linkend=\"gloss.vt.acronym.tlb\"/> "
"(VPID improves <xref linkend=\"gloss.vt.acronym.tlb\"/> performance with "
"small <xref linkend=\"gloss.vt.acronym.hypervisor_vmm\"/> development "
"effort)."
msgstr ""

#. Tag: glossterm
#: vt_acronyms.xml:445
#, no-c-format
msgid "VT-d"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:447
#, no-c-format
msgid "Virtualization Technology for Directed I/O"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:450
#, no-c-format
msgid ""
"Like <xref linkend=\"gloss.vt.acronym.iommu\"/> for <link xlink:href="
"\"https://software.intel.com/en-us/articles/intel-virtualization-technology-"
"for-directed-io-vt-d-enhancing-intel-platforms-for-efficient-virtualization-"
"of-io-devices\">Intel*</link>."
msgstr ""

#. Tag: glossterm
#: vt_acronyms.xml:456
#, no-c-format
msgid "vTPM"
msgstr ""

#. Tag: para
#: vt_acronyms.xml:458
#, no-c-format
msgid ""
"Component to establish end-to-end integrity for guests via Trusted Computing."
msgstr ""

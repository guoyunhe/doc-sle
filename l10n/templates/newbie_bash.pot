# SOME DESCRIPTIVE TITLE.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2017-01-20 18:23+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <kde-i18n-doc@kde.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: newbie_bash.xml:11
#, no-c-format
msgid "Shell Basics"
msgstr ""

#. Tag: primary
#: newbie_bash.xml:12 newbie_bash.xml:49 newbie_bash.xml:92 newbie_bash.xml:876
#: newbie_bash.xml:1687 newbie_bash.xml:1695 newbie_bash.xml:1818
#: newbie_bash.xml:1826
#, no-c-format
msgid "<primary>shell</primary>"
msgstr ""

#. Tag: secondary
#: newbie_bash.xml:13
#, no-c-format
msgid "basics"
msgstr ""

#. Tag: para
#: newbie_bash.xml:14
#, no-c-format
msgid ""
"When working with Linux these days, you can communicate with the system "
"almost without ever requiring a command line interpreter (the shell). After "
"booting your Linux system, you are usually directed to a graphical user "
"interface that guides you through the login process and the following "
"interactions with the operating system. The graphical user interface in "
"Linux (the X Window System or X11) is initially configured during "
"installation. Both KDE and GNOME desktop (and other window managers you can "
"install) use it for interaction with the user."
msgstr ""

#. Tag: para
#: newbie_bash.xml:24
#, no-c-format
msgid ""
"Nevertheless, it is useful to have some basic knowledge of working with a "
"shell because you might encounter situations where the graphical user "
"interface is not available. For example, if some problem with the X Window "
"System occurs. If you are not familiar with a shell, you might feel a bit "
"uncomfortable at first when entering commands, but the more you get used to "
"it, the more you will realize that the command line is often the quickest "
"and easiest way to perform some daily tasks."
msgstr ""

#. Tag: para
#: newbie_bash.xml:33
#, no-c-format
msgid ""
"For UNIX or Linux several shells are available which differ slightly in "
"behavior and in the commands they accept. The default shell in "
"&productnamereg; is Bash (GNU Bourne-Again Shell)."
msgstr ""

#. Tag: para
#: newbie_bash.xml:38
#, no-c-format
msgid ""
"The following sections will guide you through your first steps with the Bash "
"shell and will show you how to complete some basic tasks via the command "
"line. If you are interested in learning more or rather feel like a shell "
"<quote>power user</quote> already, refer to <xref linkend=\"cha.adm.shell\"/"
">."
msgstr ""

#. Tag: title
#: newbie_bash.xml:47
#, no-c-format
msgid "Starting a Shell"
msgstr ""

#. Tag: secondary
#: newbie_bash.xml:51
#, no-c-format
msgid "starting"
msgstr ""

#. Tag: para
#: newbie_bash.xml:53
#, no-c-format
msgid ""
"Basically, there are two different ways to start a shell from the graphical "
"user interface which usually shows after you have booted your computer:"
msgstr ""

#. Tag: para
#: newbie_bash.xml:61
#, no-c-format
msgid "you can leave the graphical user interface or"
msgstr ""

#. Tag: para
#: newbie_bash.xml:66
#, no-c-format
msgid ""
"you can start a terminal window <emphasis>within</emphasis> the graphical "
"user interface."
msgstr ""

#. Tag: para
#: newbie_bash.xml:73
#, no-c-format
msgid ""
"While the first option is always available, you can only make use of the "
"second option when you are already logged in to a desktop such as KDE or "
"GNOME. Whichever way you choose, there is always a way back and you can "
"switch back and forth between the shell and the graphical user interface."
msgstr ""

#. Tag: para
#: newbie_bash.xml:80
#, no-c-format
msgid ""
"If you want to give it a try, press <keycombo> <keycap function=\"control"
"\"></keycap> <keycap function=\"alt\"></keycap> <keycap>F2</keycap> </"
"keycombo> to leave the graphical user interface. The graphical user "
"interface disappears and you are taken to a shell which prompts you to log "
"in. Type your username and press <keycap function=\"enter\"></keycap>. Then "
"type your password and press <keycap function=\"enter\"></keycap>. The "
"prompt now changes and shows some useful information as in the following "
"example:"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:90
#, no-c-format
msgid ""
"<co xml:id=\"co.prompt.user\"/>&nbsp;&nbsp;&nbsp;<co xml:id=\"co.prompt."
"hostname\"/>&nbsp;&nbsp;&nbsp;<co xml:id=\"co.prompt.path\"/>\n"
"tux@linux:~&gt;"
msgstr ""

#. Tag: secondary
#: newbie_bash.xml:94
#, no-c-format
msgid "prompt"
msgstr ""

#. Tag: para
#: newbie_bash.xml:98
#, no-c-format
msgid "Your login."
msgstr ""

#. Tag: para
#: newbie_bash.xml:103
#, no-c-format
msgid "The hostname of your computer."
msgstr ""

#. Tag: para
#: newbie_bash.xml:108
#, no-c-format
msgid ""
"Path to the current directory. Directly after login, the current directory "
"usually is your home directory, indicated by the <literal>~</literal> symbol "
"(tilde) ."
msgstr ""

#. Tag: para
#: newbie_bash.xml:116
#, no-c-format
msgid ""
"When you are logged in at a remote computer the information provided by the "
"prompt always shows you which system you are currently working on."
msgstr ""

#. Tag: primary
#: newbie_bash.xml:123 newbie_bash.xml:213
#, no-c-format
msgid "<primary>ls</primary>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:123
#, no-c-format
msgid ""
"When the cursor is located behind this prompt, you can pass commands "
"directly to your computer system. For example, you can now enter "
"<command>ls</command> <option>-l</option> to list the contents of the "
"current directory in a detailed format. If this is enough for your first "
"encounter with the shell and you want to go back to the graphical user "
"interface, you should log out from your shell session first. To do so, type "
"<command>exit</command> and press <keycap function=\"enter\"></keycap>. Then "
"press <keycombo> <keycap function=\"alt\"></keycap> <keycap>F7</keycap> </"
"keycombo> to switch back to the graphical user interface. You will find your "
"desktop and the applications running on it unchanged."
msgstr ""

#. Tag: para
#: newbie_bash.xml:136
#, no-c-format
msgid ""
"When you are already logged in to the GNOME or the KDE desktop and want to "
"start a terminal window within the desktop, press <keycombo> <keycap "
"function=\"alt\"></keycap> <keycap>F2</keycap> </keycombo> and enter "
"<command>konsole</command> (for KDE) or <command>gnome-terminal</command> "
"(for GNOME). This opens a terminal window on your desktop. As you are "
"already logged in to your desktop, the prompt shows information about your "
"system as described above. You can now enter commands and execute tasks just "
"like in any shell which runs parallel to your desktop. To switch to another "
"application on the desktop just click on the corresponding application "
"window or select it from the taskbar of your panel. To close the terminal "
"window press <keycombo> <keycap function=\"alt\"></keycap> <keycap>F4</"
"keycap> </keycombo>."
msgstr ""

#. Tag: title
#: newbie_bash.xml:152
#, no-c-format
msgid "Entering Commands"
msgstr ""

#. Tag: primary
#: newbie_bash.xml:154 newbie_bash.xml:409 newbie_bash.xml:973
#: newbie_bash.xml:987 newbie_bash.xml:1031 newbie_bash.xml:1059
#: newbie_bash.xml:1445 newbie_bash.xml:1691 newbie_bash.xml:1699
#: newbie_bash.xml:1822 newbie_bash.xml:1830
#, no-c-format
msgid "<primary>Bash</primary>"
msgstr ""

#. Tag: secondary
#: newbie_bash.xml:156
#, no-c-format
msgid "<secondary>commands</secondary>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:158
#, no-c-format
msgid ""
"As soon as the prompt appears on the shell it is ready to receive and "
"execute commands. A command can consist of several elements. The first "
"element is the actual command, followed by parameters or options. You can "
"type a command and edit it by using the following keys: <keycap function="
"\"left\"></keycap>, <keycap function=\"right\"></keycap>, <keycap function="
"\"home\"></keycap>, <keycap function=\"end\"></keycap>, <keycap function="
"\"backspace\"></keycap> (Backspace), <keycap function=\"delete\"></keycap>, "
"and <keycap function=\"space\"></keycap>. You can correct typing errors or "
"add options. The command is not executed until you press <keycap function="
"\"enter\"></keycap>."
msgstr ""

#. Tag: title
#: newbie_bash.xml:172
#, no-c-format
msgid "No News Is Good News"
msgstr ""

#. Tag: para
#: newbie_bash.xml:173
#, no-c-format
msgid ""
"The shell is not verbose: in contrast to some graphical user interfaces, it "
"usually does not provide confirmation messages when commands have been "
"executed. Messages only appear in case of problems or errors &mdash;or if "
"you explicitly ask for them by executing a command with a certain option."
msgstr ""

#. Tag: para
#: newbie_bash.xml:180
#, no-c-format
msgid ""
"Also keep this in mind for commands to delete objects. Before entering a "
"command like <command>rm</command> (without any option) for removing a file, "
"you should know if you really want to get rid of the object: it will be "
"deleted irretrievably, without confirmation."
msgstr ""

#. Tag: title
#: newbie_bash.xml:189
#, no-c-format
msgid "Using Commands without Options"
msgstr ""

#. Tag: para
#: newbie_bash.xml:190
#, no-c-format
msgid ""
"In <xref linkend=\"sec.new.bash.accperm.ugo\"/> you already got to know one "
"of the most basic commands: <command>ls</command>, <indexterm> <primary>ls</"
"primary> </indexterm> which used to list the contents of a directory. This "
"command can be used with or without options. Entering the plain <command>ls</"
"command> command shows the contents of the current directory:"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:199
#, no-c-format
msgid ""
"tux@knox:~&gt; ls\n"
"bin Desktop Documents public_html tux.txt\n"
"tux@knox:~&gt;"
msgstr ""

#. Tag: para
#: newbie_bash.xml:200
#, no-c-format
msgid ""
"Files in Linux may have a file extension or a suffix, such as <literal>.txt</"
"literal>, but do not need to have one. This makes it difficult to "
"differentiate between files and folders in this output of the <command>ls</"
"command>. By default, the colors in the Bash shell give you a hint: "
"directories are usually shown in blue, files in black."
msgstr ""

#. Tag: title
#: newbie_bash.xml:210
#, no-c-format
msgid "Using Commands with Options"
msgstr ""

#. Tag: secondary
#: newbie_bash.xml:214 newbie_bash.xml:331
#, no-c-format
msgid "<secondary>options</secondary>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:215
#, no-c-format
msgid ""
"A better way to get more details about the contents of a directory is using "
"the <command>ls</command> command with a string of options. Options modify "
"the way a command works so that you can get it to carry out specific tasks. "
"Options are separated from the command with a blank and are usually prefixed "
"with a hyphen. The <command>ls</command> <option>-l</option> command shows "
"the contents of the same directory in full detail (long listing format):"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:223
#, no-c-format
msgid ""
"tux@knox:~&gt; ls -l\n"
"drwxr-xr-x 1 tux users     48 2015-06-23 16:08 bin\n"
"drwx---r-- 1 tux users  53279 2015-06-21 13:16 Desktop\n"
"drwx------ 1 tux users    280 2015-06-23 16:08 Documents\n"
"drwxr-xr-x 1 tux users  70733 2015-06-21 09:35 public_html\n"
"-rw-r--r-- 1 tux users  47896 2015-06-21 09:46 tux.txt\n"
"tux@knox:~&gt;"
msgstr ""

#. Tag: para
#: newbie_bash.xml:224
#, no-c-format
msgid "This output shows the following information about each object:"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:227
#, no-c-format
msgid ""
"drwxr-xr-x<co xml:id=\"co.ls_l.perm\"/> 1<co xml:id=\"co.ls_l.a\"/> tux<co "
"xml:id=\"co.ls_l.user\"/> users<co xml:id=\"co.ls_l.group\"/> 48<co xml:id="
"\"co.ls_l.size\"/> 2006-06-23 16:08<co xml:id=\"co.ls_l.date\"/> bin<co xml:"
"id=\"co.ls_l.name\"/>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:230
#, no-c-format
msgid ""
"Type of object and access permissions. For further information, refer to "
"<xref linkend=\"sec.new.bash.accperm.ugo\"/>."
msgstr ""

#. Tag: para
#: newbie_bash.xml:237
#, no-c-format
msgid "Number of hard links to this file."
msgstr ""

#. Tag: para
#: newbie_bash.xml:242
#, no-c-format
msgid ""
"Owner of the file or directory. For further information, refer to <xref "
"linkend=\"sec.new.bash.accperm.ugo\"/>."
msgstr ""

#. Tag: para
#: newbie_bash.xml:249
#, no-c-format
msgid ""
"Group assigned to the file or directory. For further information, refer to "
"<xref linkend=\"sec.new.bash.accperm.ugo\"/>."
msgstr ""

#. Tag: para
#: newbie_bash.xml:256
#, no-c-format
msgid "File size in bytes."
msgstr ""

#. Tag: para
#: newbie_bash.xml:261
#, no-c-format
msgid "Date and time of the last change."
msgstr ""

#. Tag: para
#: newbie_bash.xml:266
#, no-c-format
msgid "Name of the object."
msgstr ""

#. Tag: para
#: newbie_bash.xml:271
#, no-c-format
msgid ""
"Usually, you can combine several options by prefixing only the first option "
"with a hyphen and then write the others consecutively without a blank. For "
"example, if you want to see all files in a directory in long listing format, "
"you can combine the two options <option>-l</option> and <option>-a</option> "
"(show all files) for the <command>ls</command> command. Executing "
"<command>ls</command> <option>-la</option> shows also hidden files in the "
"directory, indicated by a dot in front (for example, <literal>.hiddenfile</"
"literal>)."
msgstr ""

#. Tag: para
#: newbie_bash.xml:281
#, no-c-format
msgid ""
"The list of contents you get with <command>ls</command> is sorted "
"alphabetically by filenames. But like in a graphical file manager, you can "
"also sort the output of <command>ls</command> <option>-l</option> according "
"to various criteria such as date, file extension or file size:"
msgstr ""

#. Tag: para
#: newbie_bash.xml:289
#, no-c-format
msgid ""
"For date and time, use <command>ls</command> <option>-lt</option> (displays "
"newest first)."
msgstr ""

#. Tag: para
#: newbie_bash.xml:295
#, no-c-format
msgid ""
"For extensions, use <command>ls</command> <option>-lx</option> (displays "
"files with no extension first)."
msgstr ""

#. Tag: para
#: newbie_bash.xml:301
#, no-c-format
msgid ""
"For file size, use <command>ls</command> <option>-lS</option> (displays "
"largest first)."
msgstr ""

#. Tag: para
#: newbie_bash.xml:307
#, no-c-format
msgid ""
"To revert the order of sorting, add <option>-r</option> as an option to your "
"<command>ls</command> command. For example, <command>ls</command> <option>-"
"lr</option> gives you the contents list sorted in reverse alphabetical "
"order, <command>ls</command> <option>-ltr</option> shows the oldest files "
"first. There are lots of other useful options for <command>ls</command>. In "
"the following section you will learn how to investigate them."
msgstr ""

#. Tag: title
#: newbie_bash.xml:319
#, no-c-format
msgid "Getting Help"
msgstr ""

#. Tag: para
#: newbie_bash.xml:320
#, no-c-format
msgid ""
"Nobody is expected to know all options of all commands by heart. If you "
"remember the command name but are not sure about the options or the syntax "
"of the command, choose one of the following possibilities:"
msgstr ""

#. Tag: term
#: newbie_bash.xml:327
#, no-c-format
msgid "<option>--help</option> option"
msgstr ""

#. Tag: primary
#: newbie_bash.xml:328
#, no-c-format
msgid "<primary>options</primary>"
msgstr ""

#. Tag: secondary
#: newbie_bash.xml:329
#, no-c-format
msgid "--help"
msgstr ""

#. Tag: primary
#: newbie_bash.xml:330 newbie_bash.xml:350 newbie_bash.xml:376
#, no-c-format
msgid "<primary>help</primary>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:334
#, no-c-format
msgid ""
"If you only want to look up the options of a certain command, try entering "
"the command followed by a space and <option>--help</option>. This <option>--"
"help</option> option exists for many commands. For example, <command>ls</"
"command> <option>--help</option> displays all the options for the "
"<command>ls</command> command."
msgstr ""

#. Tag: primary
#: newbie_bash.xml:340 newbie_bash.xml:348 newbie_bash.xml:374
#: newbie_bash.xml:1457 newbie_bash.xml:1478 newbie_bash.xml:1506
#: newbie_bash.xml:1602 newbie_bash.xml:1615 newbie_bash.xml:1631
#: newbie_bash.xml:1647 newbie_bash.xml:1663 newbie_bash.xml:1891
#: newbie_bash.xml:1903
#, no-c-format
msgid "<primary>commands</primary>"
msgstr ""

#. Tag: secondary
#: newbie_bash.xml:341
#, no-c-format
msgid "<secondary>help</secondary>"
msgstr ""

#. Tag: term
#: newbie_bash.xml:347
#, no-c-format
msgid "Manual Pages"
msgstr ""

#. Tag: secondary
#: newbie_bash.xml:349
#, no-c-format
msgid "<secondary>man</secondary>"
msgstr ""

#. Tag: secondary
#: newbie_bash.xml:351
#, no-c-format
msgid "<secondary>man pages</secondary>"
msgstr ""

#. Tag: primary
#: newbie_bash.xml:352
#, no-c-format
msgid "<primary>man pages</primary>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:355
#, no-c-format
msgid ""
"To learn more about the various commands, you can also use the manual pages. "
"Manual pages also give a short description of what the command does. They "
"can be accessed with <command>man</command> followed by the name of the "
"command, for example, <command>man&nbsp;ls</command>."
msgstr ""

#. Tag: para
#: newbie_bash.xml:361
#, no-c-format
msgid ""
"The man pages are displayed directly in the shell. To navigate them, move up "
"and down with <keycap function=\"pageup\"></keycap> and <keycap function="
"\"pagedown\"></keycap>. Move between the beginning and the end of a document "
"with <keycap function=\"home\"></keycap> and <keycap function=\"end\"></"
"keycap>. End this viewing mode by pressing <keycap>Q</keycap>. Learn more "
"about the <command>man</command> command itself with <command>man man</"
"command>."
msgstr ""

#. Tag: term
#: newbie_bash.xml:373
#, no-c-format
msgid "Info Pages"
msgstr ""

#. Tag: secondary
#: newbie_bash.xml:375
#, no-c-format
msgid "info"
msgstr ""

#. Tag: secondary
#: newbie_bash.xml:377
#, no-c-format
msgid "<secondary>info pages</secondary>"
msgstr ""

#. Tag: primary
#: newbie_bash.xml:378
#, no-c-format
msgid "<primary>info pages</primary>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:381
#, no-c-format
msgid ""
"Info pages usually provide even more information about commands. To view the "
"info page for a certain command, enter <command>info</command> followed by "
"the name of the command (for example, <command>info ls</command>). You can "
"browse an info page with a viewer directly in the shell and display the "
"different sections, called <quote>nodes.</quote> Use <keycap function=\"space"
"\"></keycap> to move forward and <keycap function=\"backspace\"></keycap> to "
"move backward. Within a node, you can also browse with <keycap function="
"\"pageup\"></keycap> and <keycap function=\"pagedown\"></keycap> but only "
"<keycap function=\"space\"></keycap> and <keycap function=\"backspace\"></"
"keycap> will take you also to the previous or subsequent node. Like for the "
"man pages, press <keycap>Q</keycap> to end the viewing mode."
msgstr ""

#. Tag: para
#: newbie_bash.xml:399
#, no-c-format
msgid ""
"Note that man pages and info pages do not exist for all commands. Sometimes "
"both are available (usually for key commands), sometimes only a man page or "
"an info page exists, and sometimes neither of them are available."
msgstr ""

#. Tag: title
#: newbie_bash.xml:408
#, no-c-format
msgid "Bash Shortcut Keys"
msgstr ""

#. Tag: secondary
#: newbie_bash.xml:410
#, no-c-format
msgid "shortcut keys"
msgstr ""

#. Tag: para
#: newbie_bash.xml:411
#, no-c-format
msgid ""
"After having entered several commands, your shell will begin to fill up with "
"all sorts of commands and the corresponding outputs. In the following table, "
"find some useful shortcut keys for navigating and editing in the shell."
msgstr ""

#. Tag: para
#: newbie_bash.xml:422
#, no-c-format
msgid "Shortcut Key"
msgstr ""

#. Tag: para
#: newbie_bash.xml:427 newbie_bash.xml:1080
#, no-c-format
msgid "Function"
msgstr ""

#. Tag: keycombo
#: newbie_bash.xml:437
#, no-c-format
msgid "<keycap function=\"control\"></keycap> <keycap>L</keycap>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:442
#, no-c-format
msgid "Clears the screen and moves the current line to the top of the page."
msgstr ""

#. Tag: keycombo
#: newbie_bash.xml:451
#, no-c-format
msgid "<keycap function=\"control\"></keycap> <keycap>C</keycap>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:456
#, no-c-format
msgid "Aborts the command which is currently being executed."
msgstr ""

#. Tag: keycombo
#: newbie_bash.xml:464
#, no-c-format
msgid ""
"<keycap function=\"shift\"></keycap> <keycap function=\"pageup\"></keycap>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:469
#, no-c-format
msgid "Scrolls upwards."
msgstr ""

#. Tag: keycombo
#: newbie_bash.xml:477
#, no-c-format
msgid ""
"<keycap function=\"shift\"></keycap> <keycap function=\"pagedown\"></keycap>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:482
#, no-c-format
msgid "Scrolls downwards."
msgstr ""

#. Tag: keycombo
#: newbie_bash.xml:490
#, no-c-format
msgid "<keycap function=\"control\"></keycap> <keycap>U</keycap>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:495
#, no-c-format
msgid "Deletes from cursor position to start of line."
msgstr ""

#. Tag: keycombo
#: newbie_bash.xml:503
#, no-c-format
msgid "<keycap function=\"control\"></keycap> <keycap>K</keycap>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:508
#, no-c-format
msgid "Deletes from cursor position to the end of line."
msgstr ""

#. Tag: keycombo
#: newbie_bash.xml:516
#, no-c-format
msgid "<keycap function=\"control\"></keycap> <keycap>D</keycap>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:521
#, no-c-format
msgid "Closes the shell session."
msgstr ""

#. Tag: para
#: newbie_bash.xml:528
#, no-c-format
msgid "<keycap function=\"up\"></keycap>, <keycap function=\"down\"></keycap>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:533
#, no-c-format
msgid "Browses in the history of executed commands."
msgstr ""

#. Tag: title
#: newbie_bash.xml:544
#, no-c-format
msgid "Working with Files and Directories"
msgstr ""

#. Tag: primary
#: newbie_bash.xml:546 newbie_bash.xml:1313 newbie_bash.xml:1441
#: newbie_bash.xml:1585
#, no-c-format
msgid "files"
msgstr ""

#. Tag: secondary
#: newbie_bash.xml:548 newbie_bash.xml:552
#, no-c-format
msgid "<secondary>paths</secondary>"
msgstr ""

#. Tag: primary
#: newbie_bash.xml:550
#, no-c-format
msgid "directories"
msgstr ""

#. Tag: primary
#: newbie_bash.xml:554 newbie_bash.xml:567 newbie_bash.xml:579
#, no-c-format
msgid "<primary>paths</primary>"
msgstr ""

#. Tag: remark
#: newbie_bash.xml:556
#, no-c-format
msgid ""
"taroth: 061013: proposal by toms: perhaps add graphic for next revision?"
msgstr ""

#. Tag: para
#: newbie_bash.xml:558
#, no-c-format
msgid ""
"To address a certain file or directory, you must specify the path leading to "
"that directory or file. As you may know from MS DOS or Mac OS already, there "
"are two ways to specify a path:"
msgstr ""

#. Tag: term
#: newbie_bash.xml:566
#, no-c-format
msgid "Absolute Path"
msgstr ""

#. Tag: secondary
#: newbie_bash.xml:568
#, no-c-format
msgid "absolute"
msgstr ""

#. Tag: para
#: newbie_bash.xml:571
#, no-c-format
msgid ""
"Enter the entire path from the root directory to the relevant file or "
"directory."
msgstr ""

#. Tag: term
#: newbie_bash.xml:578
#, no-c-format
msgid "Relative Path"
msgstr ""

#. Tag: secondary
#: newbie_bash.xml:580
#, no-c-format
msgid "relative"
msgstr ""

#. Tag: para
#: newbie_bash.xml:583
#, no-c-format
msgid ""
"Enter a path to the relevant file or directory by using the current "
"directory as a starting point. This implies to give the levels you have to "
"move up or down in the file system tree to reach the target directory of "
"file, starting from the current directory."
msgstr ""

#. Tag: para
#: newbie_bash.xml:593
#, no-c-format
msgid ""
"Paths contain filenames, directories or both, separated by slashes. Absolute "
"paths always start with a slash. Relative paths do not have a slash at the "
"beginning, but can have one or two dots."
msgstr ""

#. Tag: para
#: newbie_bash.xml:599
#, no-c-format
msgid ""
"When entering commands, you can choose either way to specify a path, "
"depending on your preferences or the amount of typing, both will lead to the "
"same result. To change directories, use the <command>cd</command> command "
"and specify the path to the directory."
msgstr ""

#. Tag: title
#: newbie_bash.xml:607
#, no-c-format
msgid "Handling Blanks in Filenames or Directory Names"
msgstr ""

#. Tag: para
#: newbie_bash.xml:608
#, no-c-format
msgid ""
"If a filename or the name of a directory contains a space, either escape the "
"space using a back slash (<literal>\\</literal>) in front of the blank or "
"enclose the filename in single quotes. Otherwise Bash interprets a filename "
"like <filename>My Documents</filename> as the names of two files or "
"directories, <filename>My</filename> and <filename>Documents</filename> in "
"this case."
msgstr ""

#. Tag: para
#: newbie_bash.xml:623
#, no-c-format
msgid ""
"When specifying paths, the following <quote>shortcuts</quote> can save you a "
"lot of typing:"
msgstr ""

#. Tag: para
#: newbie_bash.xml:630
#, no-c-format
msgid ""
"The tilde symbol (<literal>~</literal>) is a shortcut for home directories. "
"For example, to list the contents of your home directory, use <command>ls</"
"command> <option>~</option>. To list the contents of another user's home "
"directory, enter <command>ls</command> <option>~<replaceable>username</"
"replaceable> </option> (or course, this will only work if you have "
"permission to view the contents, see <xref linkend=\"sec.new.bash.accperm\"/"
">). For example, entering <command>ls ~&exampleuser_plain;</command> would "
"list the contents of the home directory of a user named &exampleuser;. You "
"can use the tilde symbol as shortcut for home directories also if you are "
"working in a network environment where your home directory may not be called "
"<filename>/home</filename> but can be mapped to any directory in the file "
"system."
msgstr ""

#. Tag: para
#: newbie_bash.xml:645
#, no-c-format
msgid ""
"From anywhere in the file system, you can reach your home directory by "
"entering <command>cd ~</command> or by simply entering <command>cd</command> "
"without any options."
msgstr ""

#. Tag: para
#: newbie_bash.xml:652
#, no-c-format
msgid ""
"When using relative paths, refer to the current directory with a dot "
"(<literal>.</literal>). This is mainly useful for commands such as "
"<command>cp</command> or <command>mv</command> by which you can copy or move "
"files and directories."
msgstr ""

#. Tag: para
#: newbie_bash.xml:660
#, no-c-format
msgid ""
"The next higher level in the tree is represented by two dots (<literal>..</"
"literal>). In order to switch to the parent directory of your current "
"directory, enter <command>cd ..</command>, to go up two levels from the "
"current directory enter <command>cd ../..</command> etc."
msgstr ""

#. Tag: para
#: newbie_bash.xml:670
#, no-c-format
msgid ""
"To apply your knowledge, find some examples below. They address basic tasks "
"you may want to execute with files or folders using Bash."
msgstr ""

#. Tag: title
#: newbie_bash.xml:677
#, no-c-format
msgid "Examples for Working with Files and Directories"
msgstr ""

#. Tag: para
#: newbie_bash.xml:678
#, no-c-format
msgid ""
"Suppose you want to copy a file located somewhere in your home directory to "
"a subdirectory of <filename>/tmp</filename> that you need to create first."
msgstr ""

#. Tag: title
#: newbie_bash.xml:684
#, no-c-format
msgid "Creating and Changing Directories"
msgstr ""

#. Tag: para
#: newbie_bash.xml:685
#, no-c-format
msgid ""
"From your home directory create a subdirectory in <filename>/tmp</filename>:"
msgstr ""

#. Tag: para
#: newbie_bash.xml:690 newbie_bash.xml:763
#, no-c-format
msgid "Enter"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:693
#, no-c-format
msgid "mkdir  /tmp/test"
msgstr ""

#. Tag: para
#: newbie_bash.xml:694
#, no-c-format
msgid ""
"<command>mkdir</command> stands for <quote>make directory</quote>. This "
"command creates a new directory named <filename>test</filename> in the "
"<filename>/tmp</filename> directory. In this case, you are using an absolute "
"path to create the <filename>test</filename> directory."
msgstr ""

#. Tag: para
#: newbie_bash.xml:703
#, no-c-format
msgid "To check what happened, now enter"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:706
#, no-c-format
msgid "ls -l /tmp"
msgstr ""

#. Tag: para
#: newbie_bash.xml:707
#, no-c-format
msgid ""
"The new directory <filename>test</filename> should appear in the list of "
"contents of the <filename>/tmp</filename> directory."
msgstr ""

#. Tag: para
#: newbie_bash.xml:713
#, no-c-format
msgid "Switch to the newly created directory with"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:716
#, no-c-format
msgid "cd /tmp/test"
msgstr ""

#. Tag: title
#: newbie_bash.xml:720
#, no-c-format
msgid "Creating and Copying Files"
msgstr ""

#. Tag: para
#: newbie_bash.xml:721
#, no-c-format
msgid ""
"Now create a new file in a subdirectory of your home directory and copy it "
"to <filename>/tmp/test</filename>. Use a relative path for this task."
msgstr ""

#. Tag: title
#: newbie_bash.xml:727
#, no-c-format
msgid "Overwriting of Existing Files"
msgstr ""

#. Tag: para
#: newbie_bash.xml:728
#, no-c-format
msgid ""
"Before copying, moving or renaming a file, check if your target directory "
"already contains a file with the same name. If yes, consider changing one of "
"the filenames or use <command>cp</command> or <command>mv</command> with "
"options like <option>-i</option>, which will prompt before overwriting an "
"existing file. Otherwise Bash will overwrite the existing file without "
"confirmation."
msgstr ""

#. Tag: para
#: newbie_bash.xml:738
#, no-c-format
msgid "To list the contents of your home directory, enter"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:741
#, no-c-format
msgid "ls -l ~"
msgstr ""

#. Tag: para
#: newbie_bash.xml:742
#, no-c-format
msgid ""
"It should contain a subdirectory called <filename>Documents</filename> by "
"default. If not, create this subdirectory with the <command>mkdir</command> "
"command you already know:"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:747
#, no-c-format
msgid "mkdir ~/Documents"
msgstr ""

#. Tag: para
#: newbie_bash.xml:750
#, no-c-format
msgid ""
"To create a new, empty file named <filename>myfile.txt</filename> in the "
"<filename>Documents</filename> directory, enter"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:754
#, no-c-format
msgid "touch ~/Documents/myfile.txt"
msgstr ""

#. Tag: para
#: newbie_bash.xml:755
#, no-c-format
msgid ""
"Usually, the <command>touch</command> command updates the modification and "
"access date for an existing file. If you use <command>touch</command> with a "
"filename which does not exist in your target directory, it creates a new "
"file."
msgstr ""

#. Tag: screen
#: newbie_bash.xml:766
#, no-c-format
msgid "ls -l ~/Documents"
msgstr ""

#. Tag: para
#: newbie_bash.xml:767
#, no-c-format
msgid "The new file should appear in the list of contents."
msgstr ""

#. Tag: para
#: newbie_bash.xml:772
#, no-c-format
msgid "To copy the newly created file, enter"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:775
#, no-c-format
msgid "cp ~/Documents/myfile.txt ."
msgstr ""

#. Tag: para
#: newbie_bash.xml:776
#, no-c-format
msgid "Do not forget the dot at the end."
msgstr ""

#. Tag: para
#: newbie_bash.xml:779
#, no-c-format
msgid ""
"This command tells Bash to go to your home directory and to copy <filename> "
"myfile.txt</filename> from the <filename>Documents</filename> subdirectory "
"to the current directory, <filename>/tmp/test</filename>, without changing "
"the name of the file."
msgstr ""

#. Tag: para
#: newbie_bash.xml:787
#, no-c-format
msgid "Check the result by entering"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:790 newbie_bash.xml:814 newbie_bash.xml:1283
#, no-c-format
msgid "ls -l"
msgstr ""

#. Tag: para
#: newbie_bash.xml:791
#, no-c-format
msgid ""
"The file <filename>myfile.txt </filename> should appear in the list of "
"contents for <filename>/tmp/test</filename>."
msgstr ""

#. Tag: title
#: newbie_bash.xml:798
#, no-c-format
msgid "Renaming and Removing Files or Directories"
msgstr ""

#. Tag: para
#: newbie_bash.xml:799
#, no-c-format
msgid ""
"Now suppose you want to rename <filename>myfile.txt </filename> into "
"<filename>tuxfile.txt</filename>. Finally you decide to remove the renamed "
"file and the <filename>test</filename> subdirectory."
msgstr ""

#. Tag: para
#: newbie_bash.xml:805
#, no-c-format
msgid "To rename the file, enter"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:808
#, no-c-format
msgid "mv myfile.txt tuxfile.txt"
msgstr ""

#. Tag: para
#: newbie_bash.xml:811
#, no-c-format
msgid "To check what happened, enter"
msgstr ""

#. Tag: para
#: newbie_bash.xml:815
#, no-c-format
msgid ""
"Instead of <filename>myfile.txt</filename>, <filename>tuxfile.txt</filename> "
"should appear in the list of contents."
msgstr ""

#. Tag: para
#: newbie_bash.xml:820
#, no-c-format
msgid ""
"<command>mv</command> stands for <literal>move</literal> and is used with "
"two options: the first option specifies the source, the second option "
"specifies the target of the operation. You can use <command>mv</command> "
"either"
msgstr ""

#. Tag: para
#: newbie_bash.xml:828
#, no-c-format
msgid "to rename a file or a directory,"
msgstr ""

#. Tag: para
#: newbie_bash.xml:833
#, no-c-format
msgid "to move a file or directory to a new location or"
msgstr ""

#. Tag: para
#: newbie_bash.xml:838
#, no-c-format
msgid "to do both in one step."
msgstr ""

#. Tag: para
#: newbie_bash.xml:845
#, no-c-format
msgid ""
"Coming to the conclusion that you do not need the file any longer, you can "
"delete it by entering"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:849
#, no-c-format
msgid "rm tuxfile.txt"
msgstr ""

#. Tag: para
#: newbie_bash.xml:850
#, no-c-format
msgid "Bash deletes the file without any confirmation."
msgstr ""

#. Tag: para
#: newbie_bash.xml:855
#, no-c-format
msgid "Move up one level with <command>cd ..</command> and check with"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:858
#, no-c-format
msgid "ls -l test"
msgstr ""

#. Tag: para
#: newbie_bash.xml:859
#, no-c-format
msgid "if the <filename>test</filename> directory is empty now."
msgstr ""

#. Tag: para
#: newbie_bash.xml:864
#, no-c-format
msgid ""
"If yes, you can remove the <filename>test</filename> directory by entering"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:868
#, no-c-format
msgid "rmdir test"
msgstr ""

#. Tag: title
#: newbie_bash.xml:874
#, no-c-format
msgid "Becoming Root"
msgstr ""

#. Tag: secondary
#: newbie_bash.xml:878
#, no-c-format
msgid "root"
msgstr ""

#. Tag: para
#: newbie_bash.xml:880
#, no-c-format
msgid ""
"&rootuser;, also called the superuser, has privileges which authorize him to "
"access all parts of the system and to execute administrative tasks. He or "
"she has the unrestricted capacity to make changes to the system and has "
"unlimited access to all files. Therefore performing some administrative "
"tasks or running certain programs such as &yast; requires &rootuser; "
"permissions."
msgstr ""

#. Tag: title
#: newbie_bash.xml:890
#, no-c-format
msgid "Using <command>su</command>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:891
#, no-c-format
msgid ""
"In order to temporarily become &rootuser; in a shell, proceed as follows:"
msgstr ""

#. Tag: para
#: newbie_bash.xml:897
#, no-c-format
msgid ""
"Enter <command>su</command>. You are prompted for the &rootuser; password."
msgstr ""

#. Tag: para
#: newbie_bash.xml:903
#, no-c-format
msgid ""
"Enter the password. If you mistyped the &rootuser; password, the shell "
"displays a message. In this case, you have to re-enter <command>su</command> "
"before retyping the password. If your password is correct, a hash symbol "
"<literal>#</literal> appears at the end of the prompt, signaling that you "
"are acting as &rootuser; now."
msgstr ""

#. Tag: para
#: newbie_bash.xml:912
#, no-c-format
msgid ""
"Execute your task. For example, transfer ownership of a file to a new user "
"which only &rootuser; is allowed to do:"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:916
#, no-c-format
msgid "chown &exampleuserII; kde_quick.xml"
msgstr ""

#. Tag: para
#: newbie_bash.xml:919
#, no-c-format
msgid ""
"After having completed your tasks as &rootuser;, switch back to your normal "
"user account. To do so, enter"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:923
#, no-c-format
msgid "exit"
msgstr ""

#. Tag: para
#: newbie_bash.xml:924
#, no-c-format
msgid ""
"The hash symbol disappears and you are acting as <quote>normal</quote> user "
"again."
msgstr ""

#. Tag: remark
#: newbie_bash.xml:928
#, no-c-format
msgid ""
"2007-07-17 - jjaeger: what about su-? taroth: left that out on purpose as "
"this only makes sense if the user knows about environment variables that I "
"didn't want to mention in this newbie chapter here..."
msgstr ""

#. Tag: title
#: newbie_bash.xml:938
#, no-c-format
msgid "Using <command>sudo</command>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:939
#, no-c-format
msgid ""
"Alternatively, you can also use <command>sudo</command> (superuser "
"<quote>do</quote>) to execute some tasks which normally are for &rootuser;s "
"only. With sudo, administrators can grant certain users &rootuser; "
"privileges for some commands. Depending on the system configuration, users "
"can then run &rootuser; commands by entering their normal password only. Due "
"to a timestamp function, users are only granted a <quote>ticket</quote> for "
"a restricted period of time after having entered their password. The ticket "
"usually expires after a few minutes. In &opensuse;, sudo requires the "
"&rootuser; password by default (if not configured otherwise by your system "
"administrator)."
msgstr ""

#. Tag: para
#: newbie_bash.xml:951
#, no-c-format
msgid ""
"For users, sudo is convenient as it prevents you from switching accounts "
"twice (to &rootuser; and back again). To change the ownership of a file "
"using sudo, only one command is necessary instead of three:"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:956
#, no-c-format
msgid "sudo chown &exampleuserII; kde_quick.xml"
msgstr ""

#. Tag: para
#: newbie_bash.xml:957
#, no-c-format
msgid ""
"After you have entered the password which you are prompted for, the command "
"is executed. If you enter a second &rootuser; command shortly after that, "
"you are not prompted for the password again, because your ticket is still "
"valid. After a certain amount of time, the ticket automatically expires and "
"the password is required again. This also prevents unauthorized persons from "
"gaining &rootuser; privileges in case a user forgets to switch back to his "
"normal user account again and leaves a &rootuser; shell open."
msgstr ""

#. Tag: title
#: newbie_bash.xml:971
#, no-c-format
msgid "Useful Features of the Shell"
msgstr ""

#. Tag: secondary
#: newbie_bash.xml:975
#, no-c-format
msgid "features"
msgstr ""

#. Tag: para
#: newbie_bash.xml:977
#, no-c-format
msgid ""
"As you probably noticed in the examples above, entering commands in Bash can "
"include a lot of typing. In the following, get to know some features of the "
"Bash that can make your work a lot easier and save a lot of typing."
msgstr ""

#. Tag: term
#: newbie_bash.xml:986
#, no-c-format
msgid "<term>History</term>"
msgstr ""

#. Tag: secondary
#: newbie_bash.xml:988
#, no-c-format
msgid "history"
msgstr ""

#. Tag: primary
#: newbie_bash.xml:989
#, no-c-format
msgid "<primary>History</primary>"
msgstr ""

#. Tag: secondary
#: newbie_bash.xml:990 newbie_bash.xml:1034 newbie_bash.xml:1062
#, no-c-format
msgid "<secondary>Bash</secondary>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:993
#, no-c-format
msgid ""
"By default, Bash <quote>remembers</quote> commands you have entered. This "
"feature is called <emphasis>history</emphasis>. You can browse through "
"commands that have been entered before, select one you want to repeat and "
"then execute it again. To do so, press <keycap function=\"up\"></keycap> "
"repeatedly until the desired command appears at the prompt. To move forward "
"through the list of previously entered commands, press <keycap function="
"\"down\"></keycap>. For easier repetition of a certain command from Bash "
"history, just type the first letter of the command you want to repeat and "
"press <keycap function=\"pageup\"></keycap>."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1005
#, no-c-format
msgid ""
"You can now edit the selected command (for example, change the name of a "
"file or a path), before you execute the command by pressing <keycap function="
"\"enter\"></keycap>. To edit the command line, just move the cursor to the "
"desired position using the arrow keys and start typing."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1011
#, no-c-format
msgid ""
"You can also search for a certain command in the history. Press <keycombo> "
"<keycap function=\"control\"></keycap> <keycap>R</keycap> </keycombo> to "
"start an incremental search function. showing the following prompt:"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1016
#, no-c-format
msgid "(reverse-i-search)`':"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1017
#, no-c-format
msgid ""
"Just type one or several letters from the command you are searching for. "
"Each character you enter narrows down the search. The corresponding search "
"result is shown on the right side of the colon whereas your input appears on "
"the left of the colon. To accept a search result, press <keycap function="
"\"escape\"></keycap>. The prompt now changes to its normal appearance and "
"shows the command you chose. You can now edit the command or directly "
"execute it by pressing <keycap function=\"enter\"></keycap>."
msgstr ""

#. Tag: term
#: newbie_bash.xml:1030
#, no-c-format
msgid "<term>Completion</term>"
msgstr ""

#. Tag: secondary
#: newbie_bash.xml:1032
#, no-c-format
msgid "completion"
msgstr ""

#. Tag: primary
#: newbie_bash.xml:1033
#, no-c-format
msgid "<primary>Completion</primary>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1037
#, no-c-format
msgid ""
"Completing a filename or directory name to its full length after typing its "
"first letters is another helpful feature of Bash. To do so, type the first "
"letters then press <keycap function=\"tab\"></keycap> (Tabulator). If the "
"filename or path can be uniquely identified, it is completed at once and the "
"cursor moves to the end of the filename. You can then enter the next option "
"of the command, if necessary. If the filename or path cannot be uniquely "
"identified (because there are several filenames starting with the same "
"letters), the filename or path is only completed up to the point where it "
"becomes ambiguous again. You can then obtain a list of them by pressing "
"<keycap function=\"tab\"></keycap> a second time. After this, you can enter "
"the next letters of the file or path then try completion again by pressing "
"<keycap function=\"tab\"></keycap>. When completing filenames and paths with "
"<keycap function=\"tab\"></keycap>, you can simultaneously check whether the "
"file or path you want to enter really exists (and you can be sure of getting "
"the spelling right)."
msgstr ""

#. Tag: term
#: newbie_bash.xml:1058
#, no-c-format
msgid "<term>Wild Cards</term>"
msgstr ""

#. Tag: secondary
#: newbie_bash.xml:1060
#, no-c-format
msgid "wild cards"
msgstr ""

#. Tag: primary
#: newbie_bash.xml:1061
#, no-c-format
msgid "<primary>Wild Cards</primary>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1065
#, no-c-format
msgid ""
"You can replace one or more characters in a filename with a wild card for "
"pathname expansion. Wild cards are characters that can stand for other "
"characters. There are three different types of these in Bash:"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1075
#, no-c-format
msgid "Wild Card"
msgstr ""

#. Tag: literal
#: newbie_bash.xml:1088
#, no-c-format
msgid "<literal>?</literal>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1092
#, no-c-format
msgid "Matches exactly one arbitrary character"
msgstr ""

#. Tag: literal
#: newbie_bash.xml:1100
#, no-c-format
msgid "<literal>*</literal>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1104
#, no-c-format
msgid "Matches any number of characters"
msgstr ""

#. Tag: literal
#: newbie_bash.xml:1112
#, no-c-format
msgid "[<replaceable>set</replaceable>]"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1116
#, no-c-format
msgid ""
"Matches one of the characters from the group specified inside the square "
"brackets, which is represented here by the string <replaceable>set</"
"replaceable>."
msgstr ""

#. Tag: title
#: newbie_bash.xml:1131
#, no-c-format
msgid "Examples For Using History, Completion and Wildcards"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1132
#, no-c-format
msgid ""
"The following examples illustrate how to make use of these convenient "
"features of Bash."
msgstr ""

#. Tag: title
#: newbie_bash.xml:1137
#, no-c-format
msgid "Using History and Completion"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1138
#, no-c-format
msgid ""
"If you already did the example <xref linkend=\"sec.new.bash.fildir.ex\"/> "
"your shell buffer should be filled with commands which you can retrieve "
"using the history function."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1144
#, no-c-format
msgid ""
"Press <keycap function=\"up\"></keycap> repeatedly until <command>cd ~</"
"command> appears."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1150
#, no-c-format
msgid ""
"Press <keycap function=\"enter\"></keycap> to execute the command and to "
"switch to your home directory."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1154
#, no-c-format
msgid ""
"By default, your home directory contains two subdirectories starting with "
"the same letter, <filename>Documents</filename> and <filename>Desktop</"
"filename>."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1161
#, no-c-format
msgid ""
"Enter <command>cd D</command> and press <keycap function=\"tab\"></keycap>."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1164
#, no-c-format
msgid ""
"Nothing happens since Bash cannot identify to which one of the "
"subdirectories you want to change."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1170
#, no-c-format
msgid ""
"Press <keycap function=\"tab\"></keycap> again to see the list of possible "
"choices:"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1174
#, no-c-format
msgid "tux@knox:~> cd D Desktop/   Documents/ tux@knox:~> cd D"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1177
#, no-c-format
msgid ""
"The prompt still shows your initial input. Type the next character of the "
"subdirectory you want to go to and press <keycap function=\"tab\"></keycap> "
"again."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1182
#, no-c-format
msgid "Bash now completes the path."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1187
#, no-c-format
msgid ""
"You can now execute the command with <keycap function=\"enter\"></keycap>."
msgstr ""

#. Tag: title
#: newbie_bash.xml:1193
#, no-c-format
msgid "Using Wildcards"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1194
#, no-c-format
msgid ""
"Now suppose that your home directory contains several files with various "
"file extensions. It also holds several versions of one file which you saved "
"under different filenames <filename>myfile1.txt</filename>, "
"<filename>myfile2.txt</filename> etc. You want to search for certain files "
"according to their properties."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1202
#, no-c-format
msgid "First, create some test files in your home directory:"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1207
#, no-c-format
msgid ""
"Use the <command>touch</command> command to create several (empty) files "
"with different file extensions, for example <filename>.pdf</filename>, "
"<filename>.xml</filename> and <filename>.jpg</filename>."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1213
#, no-c-format
msgid ""
"You can do this consecutively (do not forget to use the Bash history "
"function) or with only one <command>touch</command> command: simply add "
"several filenames separated by a space."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1220
#, no-c-format
msgid ""
"Create at least two files that have the same file extension, for example "
"<filename>.html</filename>."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1226
#, no-c-format
msgid "To create several <quote>versions</quote> of one file, enter"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1229
#, no-c-format
msgid "touch myfile{1..5}.txt"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1230
#, no-c-format
msgid "This command creates five consecutively numbered files:"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1233
#, no-c-format
msgid "myfile1.txt,&hellip;,myfile5.txt"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1236
#, no-c-format
msgid ""
"List the contents of your home directory. It should look similar to this:"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1240
#, no-c-format
msgid ""
"-rw-r--r-- 1 tux users   0 2006-07-14 13:34 foo.xml\n"
"-rw-r--r-- 1 tux users   0 2006-07-14 13:47 home.html\n"
"-rw-r--r-- 1 tux users   0 2006-07-14 13:47 index.html\n"
"-rw-r--r-- 1 tux users   0 2006-07-14 13:47 toc.html\n"
"-rw-r--r-- 1 tux users   0 2006-07-14 13:34 manual.pdf\n"
"-rw-r--r-- 1 tux users   0 2006-07-14 13:49 myfile1.txt\n"
"-rw-r--r-- 1 tux users   0 2006-07-14 13:49 myfile2.txt\n"
"-rw-r--r-- 1 tux users   0 2006-07-14 13:49 myfile3.txt\n"
"-rw-r--r-- 1 tux users   0 2006-07-14 13:49 myfile4.txt\n"
"-rw-r--r-- 1 tux users   0 2006-07-14 13:49 myfile5.txt\n"
"-rw-r--r-- 1 tux users   0 2006-07-14 13:32 tux.png"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1245
#, no-c-format
msgid ""
"With wild cards, select certain subsets of the files according to various "
"criteria:"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1251
#, no-c-format
msgid "To list all files with the <filename>.html</filename> extension, enter"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1255
#, no-c-format
msgid "ls -l *.html"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1258
#, no-c-format
msgid ""
"To list all <quote>versions</quote> of <filename>myfile.txt</filename>, enter"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1262
#, no-c-format
msgid "ls -l myfile?.txt"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1263
#, no-c-format
msgid ""
"Note that you can only use the <literal>?</literal> wild card here because "
"the numbering of the files is single-digit. As soon as you have a file named "
"<filename>myfile10.txt</filename> you must to use the <literal>*</literal> "
"wild card to view all versions of <filename>myfile.txt</filename> (or add "
"another question mark, so your string looks like <command>myfile??.txt</"
"command>)."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1273
#, no-c-format
msgid ""
"To remove, for example, version 1-3 and version 5 of <filename>myfile.txt</"
"filename>, enter"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1277
#, no-c-format
msgid "rm myfile[1-3,5].txt"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1280
#, no-c-format
msgid "Check the result with"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1284
#, no-c-format
msgid ""
"Of all <filename>myfile.txt</filename> versions only <filename>myfile4.txt</"
"filename> should be left."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1292
#, no-c-format
msgid ""
"You can also combine several wild cards in one command. In the example "
"above, <command>rm myfile[1-3,5].*</command> would lead to the same result "
"as <command>rm myfile[1-3,5].txt</command> because there are only files with "
"the extension <filename>.txt</filename> available."
msgstr ""

#. Tag: title
#: newbie_bash.xml:1299
#, no-c-format
msgid "Using Wildcards in rm Commands"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1300
#, no-c-format
msgid ""
"Wildcards in a <command>rm </command> command can be very useful but also "
"dangerous: you might delete more files from your directory than intended. To "
"see which files would be affected by the <command>rm</command>, run your "
"wildcard string with <command>ls</command> instead of <command>rm</command> "
"first."
msgstr ""

#. Tag: title
#: newbie_bash.xml:1311
#, no-c-format
msgid "Editing Texts"
msgstr ""

#. Tag: secondary
#: newbie_bash.xml:1315
#, no-c-format
msgid "editing"
msgstr ""

#. Tag: primary
#: newbie_bash.xml:1317
#, no-c-format
msgid "<primary>vi</primary>"
msgstr ""

#. Tag: primary
#: newbie_bash.xml:1319
#, no-c-format
msgid "editor"
msgstr ""

#. Tag: secondary
#: newbie_bash.xml:1321
#, no-c-format
msgid "<secondary>vi</secondary>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1323
#, no-c-format
msgid ""
"In order to edit files from the command line, you will need to know the vi "
"editor. vi is a default editor which can be found on nearly every UNIX/Linux "
"system. It can run several operating modes in which the keys you press have "
"different functions. This does not make it very easy for beginners, but you "
"should know at least the most basic operations with vi. There may be "
"situations where no other editor than vi is available."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1332
#, no-c-format
msgid "Basically, vi makes use of three operating modes:"
msgstr ""

#. Tag: term
#: newbie_bash.xml:1338
#, no-c-format
msgid "<emphasis>command</emphasis> mode"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1340
#, no-c-format
msgid ""
"In this mode, vi accepts certain key combinations as commands. Simple tasks "
"such as searching words or deleting a line can be executed."
msgstr ""

#. Tag: term
#: newbie_bash.xml:1347
#, no-c-format
msgid "<emphasis>insert</emphasis> mode"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1349
#, no-c-format
msgid "In this mode, you can write normal text."
msgstr ""

#. Tag: term
#: newbie_bash.xml:1355
#, no-c-format
msgid "<emphasis>extended</emphasis> mode"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1357
#, no-c-format
msgid ""
"In this mode, also known as colon mode (as you have to enter a colon to "
"switch to this mode), vi can execute also more complex tasks such as "
"searching and replacing text."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1366
#, no-c-format
msgid ""
"In the following (very simple) example, you will learn how to open and edit "
"a file with vi, how to save your changes and quit vi."
msgstr ""

#. Tag: title
#: newbie_bash.xml:1372
#, no-c-format
msgid "Example: Editing with vi"
msgstr ""

#. Tag: title
#: newbie_bash.xml:1375
#, no-c-format
msgid "Display of Keys"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1376
#, no-c-format
msgid ""
"In the following, find several commands that you can enter in vi by just "
"pressing keys. These appear in uppercase as on a keyboard. If you need to "
"enter a key in uppercase, this is stated explicitly by showing a key "
"combination including the <keycap function=\"shift\"></keycap> key."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1384
#, no-c-format
msgid "To create and open a new file with vi, enter"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1387
#, no-c-format
msgid "vi textfile.txt"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1388
#, no-c-format
msgid ""
"By default, vi opens in <emphasis>command</emphasis> mode in which you "
"cannot enter text."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1394
#, no-c-format
msgid ""
"Press <keycap>I</keycap> to switch to insert mode. The bottom line changes "
"and indicates that you now can insert text."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1400
#, no-c-format
msgid ""
"Write some sentences. If you want to insert a new line, first press <keycap "
"function=\"escape\"></keycap> to switch back to command mode. Press "
"<keycap>O</keycap> to insert a new line and to switch to insert mode again."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1408
#, no-c-format
msgid ""
"In the insert mode, you can edit the text with the arrow keys and with "
"<keycap function=\"delete\"></keycap>."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1414
#, no-c-format
msgid ""
"To leave vi, press <keycap function=\"escape\"></keycap> to switch to "
"command mode again. Then press <keycap>:</keycap> which takes you to the "
"extended mode. The bottom line now shows a colon."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1421
#, no-c-format
msgid ""
"To leave vi and save your changes, type <command>wq</command> (<literal>w</"
"literal> for <literal>write</literal>; <literal>q</literal> for "
"<literal>quit</literal>) and press <keycap function=\"enter\"></keycap>. If "
"you want to save the file under a different name, type <command>w "
"<replaceable>filename</replaceable></command> and press <keycap function="
"\"enter\"></keycap>."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1430
#, no-c-format
msgid ""
"To leave vi without saving, type <command>q!</command> instead and press "
"<keycap function=\"enter\"></keycap>."
msgstr ""

#. Tag: title
#: newbie_bash.xml:1439
#, no-c-format
msgid "Searching for Files or Contents"
msgstr ""

#. Tag: secondary
#: newbie_bash.xml:1443 newbie_bash.xml:1447
#, no-c-format
msgid "searching"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1449
#, no-c-format
msgid ""
"Bash offers you several commands to search for files and to search for the "
"contents of files:"
msgstr ""

#. Tag: secondary
#: newbie_bash.xml:1458
#, no-c-format
msgid "<secondary>locate</secondary>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1461
#, no-c-format
msgid ""
"This utility is only available if you have installed the <systemitem class="
"\"resource\">findutils-locate</systemitem> package. With this command you "
"can find out in which directory a specified file is located. If desired, use "
"wild cards to specify filenames. The program is very quick, because it uses "
"a database specifically created for the purpose (rather than searching "
"through the entire file system). This very fact, however, also results in a "
"major drawback: locate is unable to find any files created after the latest "
"update of its database. The database can be generated by &rootuser; running "
"<command>updatedb</command>."
msgstr ""

#. Tag: secondary
#: newbie_bash.xml:1479
#, no-c-format
msgid "<secondary>find</secondary>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1482
#, no-c-format
msgid ""
"With <command>find</command>, search for a file in a given directory. The "
"first argument specifies the directory in which to start the search. The "
"option <option>-name</option> must be followed by a search string, which may "
"also include wild cards. Unlike <command>locate</command>, which uses a "
"database, <command>find</command> scans the actual directory."
msgstr ""

#. Tag: secondary
#: newbie_bash.xml:1507
#, no-c-format
msgid "<secondary>grep</secondary>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1510
#, no-c-format
msgid ""
"The <command>grep</command> command finds a specific search string in the "
"specified text files. If the search string is found, the command displays "
"the line in which <literal>searchstring</literal> was found, along with the "
"filename. If desired, use wild cards to specify filenames."
msgstr ""

#. Tag: title
#: newbie_bash.xml:1522
#, no-c-format
msgid "Examples for Searching"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1524
#, no-c-format
msgid ""
"The KDE and GNOME desktops store user-specific application data in hidden "
"directories, for example <filename>.kde</filename> and <filename>.gnome</"
"filename>."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1530
#, no-c-format
msgid "To locate these directories on your computer, enter"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1533
#, no-c-format
msgid "locate .kde"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1534
#, no-c-format
msgid "if you have installed KDE desktop or"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1537
#, no-c-format
msgid "locate .gnome"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1538
#, no-c-format
msgid "if you have installed GNOME desktop."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1541
#, no-c-format
msgid ""
"You will see that <command>locate</command> displays all file names in the "
"database that contain the string <literal>.kde</literal> or <literal>.gnome</"
"literal> anywhere. To learn how to modify this behavior refer to the man "
"page of <command>locate</command>."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1549
#, no-c-format
msgid ""
"To search your home directory for all occurrences of filenames that contain "
"the file extension <filename>.txt</filename>, use"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1553
#, no-c-format
msgid "find ~ -name '*.txt' -print"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1562
#, no-c-format
msgid ""
"To search a directory (in this case, your home directory) for all "
"occurrences of files which contain, for example, the word <literal>music</"
"literal>, enter"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1567
#, no-c-format
msgid "grep music ~/*"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1568
#, no-c-format
msgid ""
"Note that grep is case-sensitive&mdash; unless you use it with the <option>-"
"i</option> option. With the command above you will not find any files "
"containing <literal>Music</literal>."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1573
#, no-c-format
msgid ""
"If you want to use a search string which consists of more than one word, "
"enclose the string in double quotation marks, for example:"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1577
#, no-c-format
msgid "grep \"music is great\" ~/*"
msgstr ""

#. Tag: title
#: newbie_bash.xml:1583
#, no-c-format
msgid "Viewing Text Files"
msgstr ""

#. Tag: secondary
#: newbie_bash.xml:1587
#, no-c-format
msgid "viewing"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1589
#, no-c-format
msgid ""
"When searching for the contents of a file with <command>grep</command>, the "
"output gives you the line in which the <literal>searchstring</literal> was "
"found along with the filename. Often this contextual information is still "
"not enough information to decide whether you want to open and edit this "
"file. Bash offers you several commands to have a quick look at the contents "
"of a text file directly in the shell, without opening an editor."
msgstr ""

#. Tag: primary
#: newbie_bash.xml:1603
#, no-c-format
msgid "<primary>head</primary>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1606
#, no-c-format
msgid ""
"With <command>head</command> you can view the first lines of a text file. If "
"you do not specify the command any further, <command>head</command> shows "
"the first 10 lines of a text file."
msgstr ""

#. Tag: primary
#: newbie_bash.xml:1616
#, no-c-format
msgid "<primary>tail</primary>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1619
#, no-c-format
msgid ""
"The <command>tail</command> command is the counterpart of <command>head</"
"command>. If you use <command>tail</command> without any further options it "
"displays the last 10 lines of a text file. This can be very useful to view "
"log files of your system, where the most recent messages or log entries are "
"usually found at the end of the file."
msgstr ""

#. Tag: primary
#: newbie_bash.xml:1632
#, no-c-format
msgid "<primary>less</primary>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1635
#, no-c-format
msgid ""
"With <command>less</command>, display the whole contents of a text file. To "
"move up and down half a page use <keycap function=\"pageup\"></keycap> and "
"<keycap function=\"pagedown\"></keycap>. Use <keycap function=\"space\"></"
"keycap> to scroll down one page. <keycap function=\"home\"></keycap> takes "
"you to the beginning, and <keycap function=\"end\"></keycap> to the end of "
"the document. To end the viewing mode, press <keycap>Q</keycap>."
msgstr ""

#. Tag: primary
#: newbie_bash.xml:1648
#, no-c-format
msgid "<primary>more</primary>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1651
#, no-c-format
msgid ""
"Instead of <literal>less</literal>, you can also use the older program "
"<literal>more</literal>. It has basically the same function&mdash;however, "
"it is less convenient because it does not allow you to scroll backward. Use "
"<keycap function=\"space\"></keycap> to move forward. When you reach the end "
"of the document, the viewer closes automatically."
msgstr ""

#. Tag: primary
#: newbie_bash.xml:1664
#, no-c-format
msgid "<primary>cat</primary>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1667
#, no-c-format
msgid ""
"The <command>cat</command> command displays the contents of a file, printing "
"the entire contents to the screen without interruption. As <command>cat</"
"command> does not allow you to scroll it is not very useful as viewer but it "
"is rather often used in combination with other commands."
msgstr ""

#. Tag: title
#: newbie_bash.xml:1685
#, no-c-format
msgid "Redirection and Pipes"
msgstr ""

#. Tag: secondary
#: newbie_bash.xml:1689 newbie_bash.xml:1693
#, no-c-format
msgid "<secondary>pipes</secondary>"
msgstr ""

#. Tag: secondary
#: newbie_bash.xml:1697 newbie_bash.xml:1701
#, no-c-format
msgid "<secondary>redirection</secondary>"
msgstr ""

#. Tag: primary
#: newbie_bash.xml:1703
#, no-c-format
msgid "<primary>redirection</primary>"
msgstr ""

#. Tag: secondary
#: newbie_bash.xml:1705 newbie_bash.xml:1709 newbie_bash.xml:1836
#: newbie_bash.xml:1840
#, no-c-format
msgid "<secondary>shell</secondary>"
msgstr ""

#. Tag: primary
#: newbie_bash.xml:1707
#, no-c-format
msgid "<primary>pipes</primary>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1711
#, no-c-format
msgid ""
"Sometimes it would be useful if you could write the output of a command to a "
"file for further editing or if you could combine several commands, using the "
"output of one command as the input for the next one. The shell offers this "
"function by means of redirection or pipes."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1718
#, no-c-format
msgid ""
"Normally, the standard output in the shell is your screen (or an open shell "
"window) and the standard input is the keyboard. With certain symbols you can "
"redirect the input or the output to another object, such as a file or "
"another command."
msgstr ""

#. Tag: term
#: newbie_bash.xml:1727
#, no-c-format
msgid "Redirection"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1729
#, no-c-format
msgid ""
"With <literal>&gt;</literal> you can forward the output of a command to a "
"file (output redirection), with <literal>&lt;</literal> you can use a file "
"as input for a command (input redirection)."
msgstr ""

#. Tag: term
#: newbie_bash.xml:1737
#, no-c-format
msgid "Pipe"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1739
#, no-c-format
msgid ""
"By means of a pipe symbol <literal>|</literal> you can also redirect the "
"output: with a pipe, you can combine several commands, using the output of "
"one command as input for the next command. In contrast to the other "
"redirection symbols &gt; and &lt;, the use of the pipe is not constrained to "
"files."
msgstr ""

#. Tag: title
#: newbie_bash.xml:1751
#, no-c-format
msgid "Examples for Redirection and Pipe"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1754
#, no-c-format
msgid ""
"To write the output of a command like <command>ls</command> to a file, enter"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1758
#, no-c-format
msgid "ls -l &gt; filelist.txt"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1759
#, no-c-format
msgid ""
"This creates a file named <filename>filelist.txt</filename> that contains "
"the list of contents of your current directory as generated by the "
"<command>ls</command> command."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1764
#, no-c-format
msgid ""
"However, if a file named <filename>filelist.txt</filename> already exists, "
"this command overwrites the existing file. To prevent this, use <literal>&gt;"
"&gt;</literal> instead of &gt;. Entering"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1769
#, no-c-format
msgid "ls -l &gt;&gt; filelist.txt"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1770
#, no-c-format
msgid ""
"simply appends the output of the <command>ls</command> command to an already "
"existing file named <filename>filelist.txt</filename>. If the file does not "
"exist, it is created."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1777
#, no-c-format
msgid ""
"Redirections also works the other way round. Instead of using the standard "
"input from the keyboard for a command, you can use a file as input:"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1782
#, no-c-format
msgid "sort &lt; filelist.txt"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1783
#, no-c-format
msgid ""
"This will force the <command>sort</command> command to get its input from "
"the contents of <filename>filelist.txt</filename>. The result is shown on "
"the screen. Of course, you can also write the result into another file, "
"using a combination of redirections:"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1789
#, no-c-format
msgid "sort  &lt; filelist.txt &gt; sorted_filelist.txt"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1792
#, no-c-format
msgid ""
"If a command generates a lengthy output, like <command>ls</command> <option>-"
"l</option> may do, it may be useful to pipe the output to a viewer like "
"<literal>less</literal> to be able to scroll through the pages. To do so, "
"enter"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1798
#, no-c-format
msgid "ls -l | less"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1799
#, no-c-format
msgid ""
"The list of contents of the current directory is shown in <literal>less</"
"literal>."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1803
#, no-c-format
msgid ""
"The pipe is also often used in combination with the <command>grep</command> "
"command in order to search for a certain string in the output of another "
"command. For example, if you want to view a list of files in a directory "
"which are owned by the user &exampleuser;, enter"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1810
#, no-c-format
msgid "ls -l | grep tux"
msgstr ""

#. Tag: title
#: newbie_bash.xml:1816
#, no-c-format
msgid "Starting Programs and Handling Processes"
msgstr ""

#. Tag: secondary
#: newbie_bash.xml:1820 newbie_bash.xml:1824
#, no-c-format
msgid "<secondary>processes</secondary>"
msgstr ""

#. Tag: secondary
#: newbie_bash.xml:1828 newbie_bash.xml:1832
#, no-c-format
msgid "<secondary>jobs</secondary>"
msgstr ""

#. Tag: primary
#: newbie_bash.xml:1834
#, no-c-format
msgid "<primary>processes</primary>"
msgstr ""

#. Tag: primary
#: newbie_bash.xml:1838
#, no-c-format
msgid "<primary>jobs</primary>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1842
#, no-c-format
msgid ""
"As you have seen in <xref linkend=\"sec.new.bash.edit\"/>, programs can be "
"started from the shell. Applications with a graphical user interface need "
"the X Window System and can only be started from a terminal window within a "
"graphical user interface. For example, if you want to open a file named "
"<filename>vacation.pdf</filename> in your home directory from a terminal "
"window in KDE or GNOME, simply run <command>okular&nbsp;~/vacation.pdf</"
"command> (or <command>evince&nbsp;~/vacation.pdf</command>) to start a PDF "
"viewer displaying your file."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1854
#, no-c-format
msgid ""
"When looking at the terminal window again you will realize that the command "
"line is blocked as long as the PDF viewer is open, meaning that your prompt "
"is not available. To change this, press <keycombo> <keycap function=\"control"
"\"></keycap> <keycap>Z</keycap> </keycombo> to suspend the process and enter "
"<indexterm> <primary>commands</primary> <secondary>bg</secondary> </"
"indexterm> <command>bg</command> to send the process to the background. Now "
"you can still have a look at <filename>vacation.pdf</filename> while your "
"prompt is available for further commands. An easier way to achieve this is "
"by sending a process to the background directly when starting it. To do so, "
"add an ampersand at the end of the command:"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1869
#, no-c-format
msgid "okular ~/vacation.pdf &amp;"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1871
#, no-c-format
msgid ""
"If you have started several background processes (also named jobs) from the "
"same shell, the <command>jobs</command> <indexterm> <primary>commands</"
"primary> <secondary>jobs</secondary> </indexterm> command gives you an "
"overview of the jobs. It also shows the job number in brackets and their "
"status:"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1880
#, no-c-format
msgid ""
"tux@linux:~&gt; jobs\n"
"[1]   Running        okular book.opensuse.startup-xep.pdf &amp;\n"
"[2]-  Running        okular book.opensuse.reference-xep.pdf &amp;\n"
"[3]+  Stopped        man jobs"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1882
#, no-c-format
msgid ""
"To bring a job to the foreground again, enter <indexterm> <primary>commands</"
"primary> <secondary>fg</secondary> </indexterm> <command>fg "
"<replaceable>job_number</replaceable></command>."
msgstr ""

#. Tag: secondary
#: newbie_bash.xml:1892
#, no-c-format
msgid "<secondary>ps</secondary>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1893
#, no-c-format
msgid ""
"Whereas <command>job</command> only shows the background processes started "
"from a specific shell, the <command>ps</command> command (run without "
"options) shows a list of all your processes&mdash;those you started. Find an "
"example output below:"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1899
#, no-c-format
msgid ""
"tux@linux:~&gt; ps\n"
"PID TTY          TIME CMD\n"
"15500 pts/1    00:00:00 bash\n"
"28214 pts/1    00:00:00 okular\n"
"30187 pts/1    00:00:00 kwrite\n"
"30280 pts/1    00:00:00 ps"
msgstr ""

#. Tag: secondary
#: newbie_bash.xml:1904
#, no-c-format
msgid "kill"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1905
#, no-c-format
msgid ""
"In case a program cannot be terminated in the normal way, use the "
"<command>kill</command> command to stop the process (or processes) belonging "
"to that program. To do so, specify the process ID (PID) shown by the output "
"of <command>ps</command>. For example, to shut down the KWrite editor in the "
"example above, enter"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1912
#, no-c-format
msgid "kill 30187"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1914
#, no-c-format
msgid ""
"This sends a <emphasis>TERM</emphasis> signal that instructs the program to "
"shut itself down."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1919
#, no-c-format
msgid ""
"Alternatively, if the program or process you want to terminate is a "
"background job and is shown by the <command>jobs</command> command, you can "
"also use the <command>kill</command> command in combination with the job "
"number to terminate this process. When identifying the job with the job "
"number, you must prefix the number with a percent character (<literal>%</"
"literal>):"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1928
#, no-c-format
msgid "kill %<replaceable>job_number</replaceable>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1930
#, no-c-format
msgid ""
"If <command>kill</command> does not help&mdash;as is sometimes the case for "
"<quote>runaway</quote> programs&mdash;try"
msgstr ""

#. Tag: screen
#: newbie_bash.xml:1935
#, no-c-format
msgid "kill -9 <replaceable>PID</replaceable>"
msgstr ""

#. Tag: para
#: newbie_bash.xml:1937
#, no-c-format
msgid ""
"This sends a <emphasis>KILL</emphasis> signal instead of a <emphasis>TERM</"
"emphasis> signal, usually bringing the specified process to an end."
msgstr ""

#. Tag: para
#: newbie_bash.xml:1943
#, no-c-format
msgid ""
"This section is intended to introduce the most basic set of commands for "
"handling jobs and processes. Find an overview for system administrators in "
"<xref linkend=\"sec.util.processes\"/>."
msgstr ""

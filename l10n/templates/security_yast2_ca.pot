# SOME DESCRIPTIVE TITLE.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2017-01-20 18:23+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <kde-i18n-doc@kde.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: security_yast2_ca.xml:24
#, no-c-format
msgid "Managing X.509 Certification"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:27
#, no-c-format
msgid ""
"An increasing number of authentication mechanisms are based on cryptographic "
"procedures. Digital certificates that assign cryptographic keys to their "
"owners play an important role in this context. These certificates are used "
"for communication and can also be found, for example, on company ID cards. "
"The generation and administration of certificates is mostly handled by "
"official institutions that offer this as a commercial service. In some "
"cases, however, it may make sense to carry out these tasks yourself. For "
"example, if a company does not want to pass personal data to third parties."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:38
#, no-c-format
msgid ""
"&yast; provides two modules for certification, which offer basic management "
"functions for digital X.509 certificates. The following sections explain the "
"basics of digital certification and how to use &yast; to create and "
"administer certificates of this type."
msgstr ""

#. Tag: primary
#: security_yast2_ca.xml:51 security_yast2_ca.xml:496 security_yast2_ca.xml:507
#: security_yast2_ca.xml:706 security_yast2_ca.xml:799
#: security_yast2_ca.xml:931 security_yast2_ca.xml:1012
#: security_yast2_ca.xml:1076 security_yast2_ca.xml:1215
#: security_yast2_ca.xml:1254
#, no-c-format
msgid "<primary>&yast;</primary>"
msgstr ""

#. Tag: secondary
#: security_yast2_ca.xml:52 security_yast2_ca.xml:508 security_yast2_ca.xml:707
#: security_yast2_ca.xml:800 security_yast2_ca.xml:932
#: security_yast2_ca.xml:1013 security_yast2_ca.xml:1077
#: security_yast2_ca.xml:1216 security_yast2_ca.xml:1255
#, no-c-format
msgid "<secondary>X.509 certification</secondary>"
msgstr ""

#. Tag: primary
#: security_yast2_ca.xml:53 security_yast2_ca.xml:58 security_yast2_ca.xml:155
#: security_yast2_ca.xml:325 security_yast2_ca.xml:459
#: security_yast2_ca.xml:475
#, no-c-format
msgid "<primary>X.509 certification</primary>"
msgstr ""

#. Tag: secondary
#: security_yast2_ca.xml:54
#, no-c-format
msgid "<secondary>&yast;</secondary>"
msgstr ""

#. Tag: title
#: security_yast2_ca.xml:56
#, no-c-format
msgid "The Principles of Digital Certification"
msgstr ""

#. Tag: secondary
#: security_yast2_ca.xml:60
#, no-c-format
msgid "principles"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:62
#, no-c-format
msgid ""
"Digital certification uses cryptographic processes to encrypt and protect "
"data from access by unauthorized people. The user data is encrypted using a "
"second data record, or <emphasis>key</emphasis>. The key is applied to the "
"user data in a mathematical process, producing an altered data record in "
"which the original content can no longer be identified. Asymmetrical "
"encryption is now in general use (<emphasis>public key method</emphasis>). "
"Keys always occur in pairs:"
msgstr ""

#. Tag: term
#: security_yast2_ca.xml:74
#, no-c-format
msgid "Private Key"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:76
#, no-c-format
msgid ""
"The private key must be kept safely by the key owner. Accidental publication "
"of the private key compromises the key pair and renders it useless."
msgstr ""

#. Tag: term
#: security_yast2_ca.xml:84
#, no-c-format
msgid "Public Key"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:86
#, no-c-format
msgid "The key owner circulates the public key for use by third parties."
msgstr ""

#. Tag: title
#: security_yast2_ca.xml:110
#, no-c-format
msgid "Key Authenticity"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:111
#, no-c-format
msgid ""
"Because the public key process is in widespread use, there are many public "
"keys in circulation. Successful use of this system requires that every user "
"be sure that a public key actually belongs to the assumed owner. The "
"assignment of users to public keys is confirmed by trustworthy organizations "
"with public key certificates. Such certificates contain the name of the key "
"owner, the corresponding public key, and the electronic signature of the "
"person issuing the certificate."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:120
#, no-c-format
msgid ""
"Trustworthy organizations that issue and sign public key certificates are "
"usually part of a certification infrastructure. This is responsible for the "
"other aspects of certificate management, such as publication, withdrawal, "
"and renewal of certificates. An infrastructure of this kind is generally "
"called a <emphasis>public key infrastructure</emphasis> or <emphasis>PKI</"
"emphasis>. One familiar PKI is the <emphasis>OpenPGP</emphasis> standard in "
"which users publish their certificates themselves without central "
"authorization points. These certificates become trustworthy when signed by "
"other parties in the <quote>web of trust.</quote>"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:132
#, no-c-format
msgid ""
"The <emphasis>X.509 Public Key Infrastructure</emphasis> (PKIX) is an "
"alternative model defined by the <emphasis>IETF</emphasis> (Internet "
"Engineering Task Force) that serves as a model for almost all publicly-used "
"PKIs today. In this model, authentication is made by <emphasis>certificate "
"authorities</emphasis> (CA) in a hierarchical tree structure. The root of "
"the tree is the root CA, which certifies all sub-CAs. The lowest level of "
"sub-CAs issue user certificates. The user certificates are trustworthy by "
"certification that can be traced to the root CA."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:143
#, no-c-format
msgid ""
"The security of such a PKI depends on the trustworthiness of the CA "
"certificates. To make certification practices clear to PKI customers, the "
"PKI operator defines a <emphasis>certification practice statement</emphasis> "
"(CPS) that defines the procedures for certificate management. This should "
"ensure that the PKI only issues trustworthy certificates."
msgstr ""

#. Tag: title
#: security_yast2_ca.xml:154
#, no-c-format
msgid "X.509 Certificates"
msgstr ""

#. Tag: secondary
#: security_yast2_ca.xml:156
#, no-c-format
msgid "<secondary>certificates</secondary>"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:157
#, no-c-format
msgid ""
"An X.509 certificate is a data structure with several fixed fields and, "
"optionally, additional extensions. The fixed fields mainly contain the name "
"of the key owner, the public key, and the data relating to the issuing CA "
"(name and signature). For security reasons, a certificate should only have a "
"limited period of validity, so a field is also provided for this date. The "
"CA guarantees the validity of the certificate in the specified period. The "
"CPS usually requires the PKI (the issuing CA) to create and distribute a new "
"certificate before expiration."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:168
#, no-c-format
msgid ""
"The extensions can contain any additional information. An application is "
"only required to be able to evaluate an extension if it is identified as "
"<emphasis>critical</emphasis>. If an application does not recognize a "
"critical extension, it must reject the certificate. Some extensions are only "
"useful for a specific application, such as signature or encryption."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:175
#, no-c-format
msgid "shows the fields of a basic X.509 certificate in version 3."
msgstr ""

#. Tag: title
#: security_yast2_ca.xml:180
#, no-c-format
msgid "X.509v3 Certificate"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:185 security_yast2_ca.xml:354
#, no-c-format
msgid "Field"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:190 security_yast2_ca.xml:359
#, no-c-format
msgid "Content"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:199 security_yast2_ca.xml:368
#, no-c-format
msgid "Version"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:204
#, no-c-format
msgid "The version of the certificate, for example, v3"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:211
#, no-c-format
msgid "Serial Number"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:216
#, no-c-format
msgid "Unique certificate ID (an integer)"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:223 security_yast2_ca.xml:380
#, no-c-format
msgid "Signature"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:228
#, no-c-format
msgid "The ID of the algorithm used to sign the certificate"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:235 security_yast2_ca.xml:392
#, no-c-format
msgid "Issuer"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:240
#, no-c-format
msgid "Unique name (DN) of the issuing authority (CA)"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:247
#, no-c-format
msgid "Validity"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:252
#, no-c-format
msgid "Period of validity"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:259
#, no-c-format
msgid "Subject"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:264
#, no-c-format
msgid "Unique name (DN) of the owner"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:271
#, no-c-format
msgid "Subject Public Key Info"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:276
#, no-c-format
msgid "Public key of the owner and the ID of the algorithm"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:283
#, no-c-format
msgid "Issuer Unique ID"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:288
#, no-c-format
msgid "Unique ID of the issuing CA (optional)"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:295
#, no-c-format
msgid "Subject Unique ID"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:300
#, no-c-format
msgid "Unique ID of the owner (optional)"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:307 security_yast2_ca.xml:442
#, no-c-format
msgid "Extensions"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:312
#, no-c-format
msgid ""
"Optional additional information, such as <quote>KeyUsage</quote> or "
"<quote>BasicConstraints</quote>"
msgstr ""

#. Tag: title
#: security_yast2_ca.xml:324
#, no-c-format
msgid "Blocking X.509 Certificates"
msgstr ""

#. Tag: secondary
#: security_yast2_ca.xml:326
#, no-c-format
msgid "revocation list"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:327
#, no-c-format
msgid ""
"If a certificate becomes untrustworthy before it has expired, it must be "
"blocked immediately. This can become necessary if, for example, the private "
"key has accidentally been made public. Blocking certificates is especially "
"important if the private key belongs to a CA rather than a user certificate. "
"In this case, all user certificates issued by the relevant CA must be "
"blocked immediately. If a certificate is blocked, the PKI (the responsible "
"CA) must make this information available to all those involved using a "
"<emphasis>certificate revocation list</emphasis> (CRL)."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:338
#, no-c-format
msgid ""
"These lists are supplied by the CA to public CRL distribution points (CDPs) "
"at regular intervals. The CDP can optionally be named as an extension in the "
"certificate, so a checker can fetch a current CRL for validation purposes. "
"One way to do this is the <emphasis>online certificate status protocol</"
"emphasis> (OCSP). The authenticity of the CRLs is ensured with the signature "
"of the issuing CA. <xref linkend=\"tab.yast.ca.intro.crl\" xrefstyle="
"\"select:label nopage\"/> shows the basic parts of a X.509 CRL."
msgstr ""

#. Tag: title
#: security_yast2_ca.xml:349
#, no-c-format
msgid "X.509 Certificate Revocation List (CRL)"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:373
#, no-c-format
msgid "The version of the CRL, such as v2"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:385
#, no-c-format
msgid "The ID of the algorithm used to sign the CRL"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:397
#, no-c-format
msgid "Unique name (DN) of the publisher of the CRL (usually the issuing CA)"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:405
#, no-c-format
msgid "This Update"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:410
#, no-c-format
msgid "Time of publication (date, time) of this CRL"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:417
#, no-c-format
msgid "Next Update"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:422
#, no-c-format
msgid "Time of publication (date, time) of the next CRL"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:429
#, no-c-format
msgid "List of revoked certificates"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:434
#, no-c-format
msgid ""
"Every entry contains the serial number of the certificate, the time of "
"revocation, and optional extensions (CRL entry extensions)"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:447
#, no-c-format
msgid "Optional CRL extensions"
msgstr ""

#. Tag: title
#: security_yast2_ca.xml:458
#, no-c-format
msgid "Repository for Certificates and CRLs"
msgstr ""

#. Tag: secondary
#: security_yast2_ca.xml:460 security_yast2_ca.xml:476
#, no-c-format
msgid "repository"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:461
#, no-c-format
msgid ""
"The certificates and CRLs for a CA must be made publicly accessible using a "
"<emphasis>repository</emphasis>. Because the signature protects the "
"certificates and CRLs from being forged, the repository itself does not need "
"to be secured in a special way. Instead, it tries to grant the simplest and "
"fastest access possible. For this reason, certificates are often provided on "
"an LDAP or HTTP server. Find explanations about LDAP in <xref linkend=\"cha."
"security.ldap\"/>. <xref os=\"sles;osuse\" linkend=\"cha.apache2\"/> "
"contains information about the HTTP server."
msgstr ""

#. Tag: title
#: security_yast2_ca.xml:474
#, no-c-format
msgid "Proprietary PKI"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:477
#, no-c-format
msgid ""
"&yast; contains modules for the basic management of X.509 certificates. This "
"mainly involves the creation of CAs, sub-CAs, and their certificates. The "
"services of a PKI go far beyond simply creating and distributing "
"certificates and CRLs. The operation of a PKI requires a well-conceived "
"administrative infrastructure allowing continuous update of certificates and "
"CRLs. This infrastructure is provided by commercial PKI products and can "
"also be partly automated. &yast; provides tools for creating and "
"distributing CAs and certificates, but cannot currently offer this "
"background infrastructure. To set up a small PKI, you can use the available "
"&yast; modules. However, you should use commercial products to set up an "
"<quote>official</quote> or commercial PKI."
msgstr ""

#. Tag: title
#: security_yast2_ca.xml:494
#, no-c-format
msgid "&yast; Modules for CA Management"
msgstr ""

#. Tag: secondary
#: security_yast2_ca.xml:498
#, no-c-format
msgid "CA management"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:500
#, no-c-format
msgid ""
"&yast; provides two modules for basic CA management. The primary management "
"tasks with these modules are explained here."
msgstr ""

#. Tag: title
#: security_yast2_ca.xml:506
#, no-c-format
msgid "Creating a Root CA"
msgstr ""

#. Tag: tertiary
#: security_yast2_ca.xml:509
#, no-c-format
msgid "root CA"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:510
#, no-c-format
msgid ""
"<phrase os=\"sles\">After a default installation, &productname; contains "
"already a root CA named YaST_Default_CA. Use this module to create "
"additional root CAs.</phrase> The first step when setting up a PKI is to "
"create a root CA. Do the following:"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:518
#, no-c-format
msgid ""
"Start &yast; and go to <menuchoice><guimenu>Security and Users</"
"guimenu><guimenu>CA Management</guimenu></menuchoice>."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:524
#, no-c-format
msgid "Click <guimenu>Create Root CA</guimenu>."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:529
#, no-c-format
msgid ""
"Enter the basic data for the CA in the first dialog, shown in <xref linkend="
"\"fig.yast.ca.ca_basic\" xrefstyle=\"select:label nopage\"/>. The text boxes "
"have the following meanings:"
msgstr ""

#. Tag: title
#: security_yast2_ca.xml:535
#, no-c-format
msgid "&yast; CA Module&mdash;Basic Data for a Root CA"
msgstr ""

#. Tag: guimenu
#: security_yast2_ca.xml:547
#, no-c-format
msgid "CA Name"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:550
#, no-c-format
msgid ""
"Enter the technical name of the CA. Directory names, among other things, are "
"derived from this name, which is why only the characters listed in the help "
"can be used. The technical name is also displayed in the overview when the "
"module is started."
msgstr ""

#. Tag: guimenu
#: security_yast2_ca.xml:559
#, no-c-format
msgid "Common Name"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:562
#, no-c-format
msgid "Enter the name for use in referring to the CA."
msgstr ""

#. Tag: guimenu
#: security_yast2_ca.xml:568
#, no-c-format
msgid "E-Mail Addresses"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:571
#, no-c-format
msgid ""
"Several e-mail addresses can be entered that can be seen by the CA user. "
"This can be helpful for inquiries."
msgstr ""

#. Tag: guimenu
#: security_yast2_ca.xml:578
#, no-c-format
msgid "Country"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:581
#, no-c-format
msgid "Select the country where the CA is operated."
msgstr ""

#. Tag: term
#: security_yast2_ca.xml:587
#, no-c-format
msgid ""
"<guimenu>Organization</guimenu>, <guimenu>Organizational Unit</guimenu>, "
"<guimenu>Locality</guimenu>, <guimenu>State</guimenu>"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:591
#, no-c-format
msgid "Optional values"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:597
#, no-c-format
msgid "Proceed with <guimenu>Next</guimenu>."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:602
#, no-c-format
msgid ""
"Enter a password in the second dialog. This password is always required when "
"using the CA&mdash;when creating a sub-CA or generating certificates. The "
"text boxes have the following meaning:"
msgstr ""

#. Tag: guimenu
#: security_yast2_ca.xml:609
#, no-c-format
msgid "Key Length"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:612
#, no-c-format
msgid ""
"<guimenu>Key Length</guimenu> contains a meaningful default and does not "
"generally need to be changed unless an application cannot deal with this key "
"length. The higher the number the more secure your password is."
msgstr ""

#. Tag: guimenu
#: security_yast2_ca.xml:621
#, no-c-format
msgid "Valid Period (days)"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:624
#, no-c-format
msgid ""
"The <guimenu>Valid Period</guimenu> in the case of a CA defaults to 3650 "
"days (roughly ten years). This long period makes sense because the "
"replacement of a deleted CA involves an enormous administrative effort."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:633
#, no-c-format
msgid ""
"Clicking <guimenu>Advanced Options</guimenu> opens a dialog for setting "
"different attributes from the X.509 extensions (<xref linkend=\"fig.yast.ca."
"extensions\"/>). These values have rational default settings and should only "
"be changed if you are really sure of what you are doing. Proceed with "
"<guimenu>Next</guimenu>."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:642
#, no-c-format
msgid ""
"Review the summary. &yast; displays the current settings for confirmation. "
"Click <guimenu>Create</guimenu>. The root CA is created then appears in the "
"overview."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:650
#, no-c-format
msgid ""
"In general, it is best not to allow user certificates to be issued by the "
"root CA. It is better to create at least one sub-CA and create the user "
"certificates from there. This has the advantage that the root CA can be kept "
"isolated and secure, for example, on an isolated computer on secure "
"premises. This makes it very difficult to attack the root CA."
msgstr ""

#. Tag: title
#: security_yast2_ca.xml:661
#, no-c-format
msgid "Changing Password"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:663
#, no-c-format
msgid "If you need to change your password for your CA, proceed as follows:"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:668 security_yast2_ca.xml:726
#: security_yast2_ca.xml:822 security_yast2_ca.xml:880
#: security_yast2_ca.xml:946 security_yast2_ca.xml:1029
#, no-c-format
msgid "Start &yast; and open the CA module."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:673 security_yast2_ca.xml:731
#: security_yast2_ca.xml:827 security_yast2_ca.xml:885
#, no-c-format
msgid "Select the required root CA and click <guimenu>Enter CA</guimenu>."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:678
#, no-c-format
msgid ""
"Enter the password if you entered a CA the first time. &yast; displays the "
"CA key information in the <guimenu>Description</guimenu> tab (see <xref "
"linkend=\"fig.yast.ca.usage\" xrefstyle=\"select:label nopage\"/>)."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:686
#, no-c-format
msgid ""
"Click <guimenu>Advanced</guimenu> and select <guimenu>Change CA Password</"
"guimenu>. A dialog opens."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:692
#, no-c-format
msgid "Enter the old and the new password."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:697 security_yast2_ca.xml:790
#: security_yast2_ca.xml:869
#, no-c-format
msgid "Finish with <guimenu>OK</guimenu>"
msgstr ""

#. Tag: title
#: security_yast2_ca.xml:705
#, no-c-format
msgid "Creating or Revoking a Sub-CA"
msgstr ""

#. Tag: tertiary
#: security_yast2_ca.xml:708
#, no-c-format
msgid "sub-CA"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:709
#, no-c-format
msgid "A sub-CA is created in the same way as a root CA."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:713
#, no-c-format
msgid ""
"The validity period for a sub-CA must be fully within the validity period of "
"the <quote>parent</quote> CA. A sub-CA is always created after the "
"<quote>parent</quote> CA, therefore, the default value leads to an error "
"message. To avoid this, enter a permissible value for the period of validity."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:721
#, no-c-format
msgid "Do the following:"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:736
#, no-c-format
msgid ""
"Enter the password if you are entering a CA for the first time. &yast; "
"displays the CA key information in the tab <guimenu>Description</guimenu> "
"(see <xref linkend=\"fig.yast.ca.usage\" xrefstyle=\"select:label nopage\"/"
">)."
msgstr ""

#. Tag: title
#: security_yast2_ca.xml:743
#, no-c-format
msgid "&yast; CA Module&mdash;Using a CA"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:755
#, no-c-format
msgid ""
"Click <guimenu>Advanced</guimenu> and select <guimenu>Create SubCA</"
"guimenu>. This opens the same dialog as for creating a root CA."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:761
#, no-c-format
msgid ""
"Proceed as described in <xref linkend=\"sec.security.yast_ca.module.rootca\"/"
">."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:766
#, no-c-format
msgid ""
"It is possible to use one password for all your CAs. Enable <guimenu>Use CA "
"Password as Certificate Password</guimenu> to give your sub-CAs the same "
"password as your root CA. This helps to reduce the amount of passwords for "
"your CAs."
msgstr ""

#. Tag: title
#: security_yast2_ca.xml:773
#, no-c-format
msgid "Check your Valid Period"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:774
#, no-c-format
msgid ""
"Take into account that the valid period must be lower than the valid period "
"in the root CA."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:781
#, no-c-format
msgid ""
"Select the <guimenu>Certificates</guimenu> tab. Reset compromised or "
"otherwise unwanted sub-CAs here, using <guimenu>Revoke</guimenu>. Revocation "
"alone is not enough to deactivate a sub-CA. You must also publish revoked "
"sub-CAs in a CRL. The creation of CRLs is described in <xref linkend=\"sec."
"security.yast_ca.module.crl\"/>."
msgstr ""

#. Tag: title
#: security_yast2_ca.xml:798
#, no-c-format
msgid "Creating or Revoking User Certificates"
msgstr ""

#. Tag: tertiary
#: security_yast2_ca.xml:801
#, no-c-format
msgid "<tertiary>certificates</tertiary>"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:802
#, no-c-format
msgid ""
"Creating client and server certificates is very similar to creating CAs in "
"<xref linkend=\"sec.security.yast_ca.module.rootca\"/>. The same principles "
"apply here. In certificates intended for e-mail signature, the e-mail "
"address of the sender (the private key owner) should be contained in the "
"certificate to enable the e-mail program to assign the correct certificate."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:810
#, no-c-format
msgid ""
"For certificate assignment during encryption, it is necessary for the e-mail "
"address of the recipient (the public key owner) to be included in the "
"certificate. In the case of server and client certificates, the host name of "
"the server must be entered in the <guimenu>Common Name</guimenu> field. The "
"default validity period for certificates is 365 days."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:817
#, no-c-format
msgid "To create client and server certificates, do the following:"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:832 security_yast2_ca.xml:890
#, no-c-format
msgid ""
"Enter the password if you are entering a CA for the first time. &yast; "
"displays the CA key information in the <guimenu>Description</guimenu> tab."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:839
#, no-c-format
msgid ""
"Click <guimenu>Certificates</guimenu> (see <xref linkend=\"fig.yast.ca.cert"
"\" xrefstyle=\"select:label nopage\"/>)."
msgstr ""

#. Tag: title
#: security_yast2_ca.xml:844
#, no-c-format
msgid "Certificates of a CA"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:856
#, no-c-format
msgid ""
"Click <menuchoice> <guimenu>Add</guimenu> <guimenu>Add Server Certificate</"
"guimenu> </menuchoice> and create a server certificate."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:862
#, no-c-format
msgid ""
"Click <menuchoice> <guimenu>Add</guimenu> <guimenu>Add Client Certificate</"
"guimenu> </menuchoice> and create a client certificate. Do not forget to "
"enter an e-mail address."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:874
#, no-c-format
msgid ""
"To revoke compromised or otherwise unwanted certificates, do the following:"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:897
#, no-c-format
msgid ""
"Click <guimenu>Certificates</guimenu> (see <xref linkend=\"sec.security."
"yast_ca.module.subca\"/>)."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:903
#, no-c-format
msgid "Select the certificate to revoke and click <guimenu>Revoke</guimenu>."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:908
#, no-c-format
msgid "Choose a reason to revoke this certificate."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:913
#, no-c-format
msgid "Finish with <guimenu>OK</guimenu>."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:919
#, no-c-format
msgid ""
"Revocation alone is not enough to deactivate a certificate. Also publish "
"revoked certificates in a CRL. <xref linkend=\"sec.security.yast_ca.module."
"crl\"/> explains how to create CRLs. Revoked certificates can be completely "
"removed after publication in a CRL with <guimenu>Delete</guimenu>."
msgstr ""

#. Tag: title
#: security_yast2_ca.xml:930
#, no-c-format
msgid "Changing Default Values"
msgstr ""

#. Tag: tertiary
#: security_yast2_ca.xml:933
#, no-c-format
msgid "changing default values"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:934
#, no-c-format
msgid ""
"The previous sections explained how to create sub-CAs, client certificates, "
"and server certificates. Special settings are used in the extensions of the "
"X.509 certificate. These settings have been given rational defaults for "
"every certificate type and do not normally need to be changed. However, it "
"may be that you have special requirements for these extensions. In this "
"case, it may make sense to adjust the defaults. Otherwise, start from "
"scratch every time you create a certificate."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:951
#, no-c-format
msgid ""
"Enter the required root CA, as described in <xref linkend=\"sec.security."
"yast_ca.module.subca\"/>."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:957
#, no-c-format
msgid ""
"Click <menuchoice> <guimenu>Advanced</guimenu> <guimenu>Edit Default</"
"guimenu></menuchoice>."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:963
#, no-c-format
msgid ""
"Choose type of certificate to change and proceed with <guimenu>Next</"
"guimenu>."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:969
#, no-c-format
msgid ""
"The dialog for changing the defaults as shown in <xref linkend=\"fig.yast.ca."
"extensions\"/> opens."
msgstr ""

#. Tag: title
#: security_yast2_ca.xml:974
#, no-c-format
msgid "&yast; CA Module&mdash;Extended Settings"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:986
#, no-c-format
msgid ""
"Change the associated value on the right side and set or delete the critical "
"setting with <guimenu>critical</guimenu>."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:992
#, no-c-format
msgid "Click <guimenu>Next</guimenu> to see a short summary."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:997
#, no-c-format
msgid "Finish your changes with <guimenu>Save</guimenu>."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:1003
#, no-c-format
msgid ""
"All changes to the defaults only affect objects created after this point. "
"Already-existing CAs and certificates remain unchanged."
msgstr ""

#. Tag: title
#: security_yast2_ca.xml:1011
#, no-c-format
msgid "Creating Certificate Revocation Lists (CRLs)"
msgstr ""

#. Tag: tertiary
#: security_yast2_ca.xml:1014
#, no-c-format
msgid "creating CRLs"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:1015
#, no-c-format
msgid ""
"If compromised or otherwise unwanted certificates need to be excluded from "
"further use, they must first be revoked. The procedure for this is explained "
"in <xref linkend=\"sec.security.yast_ca.module.subca\"/> (for sub-CAs) and "
"<xref linkend=\"sec.security.yast_ca.module.clientserver\"/> (for user "
"certificates). After this, a CRL must be created and published with this "
"information."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:1023
#, no-c-format
msgid ""
"The system maintains only one CRL for each CA. To create or update this CRL, "
"do the following:"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:1034
#, no-c-format
msgid ""
"Enter the required CA, as described in <xref linkend=\"sec.security.yast_ca."
"module.subca\"/>."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:1040
#, no-c-format
msgid ""
"Click <guimenu>CRL</guimenu>. The dialog that opens displays a summary of "
"the last CRL of this CA."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:1046
#, no-c-format
msgid ""
"Create a new CRL with <guimenu>Generate CRL</guimenu> if you have revoked "
"new sub-CAs or certificates since its creation."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:1052
#, no-c-format
msgid "Specify the period of validity for the new CRL (default: 30 days)."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:1057
#, no-c-format
msgid ""
"Click <guimenu>OK</guimenu> to create and display the CRL. Afterward, you "
"must publish this CRL."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:1064
#, no-c-format
msgid ""
"Applications that evaluate CRLs reject every certificate if the CRL is not "
"available or has expired. As a PKI provider, it is your duty always to "
"create and publish a new CRL before the current CRL expires (period of "
"validity). &yast; does not provide a function for automating this procedure."
msgstr ""

#. Tag: title
#: security_yast2_ca.xml:1075
#, no-c-format
msgid "Exporting CA Objects to LDAP"
msgstr ""

#. Tag: tertiary
#: security_yast2_ca.xml:1078
#, no-c-format
msgid "exporting CA objects to LDAP"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:1079
#, no-c-format
msgid ""
"The executing computer should be configured with the &yast; LDAP client for "
"LDAP export. This provides LDAP server information at runtime that can be "
"used when completing dialog fields. Otherwise (although export may be "
"possible), all LDAP data must be entered manually. You must always enter "
"several passwords (see <xref linkend=\"tab.yast.ca.ldap.password\"/>)."
msgstr ""

#. Tag: title
#: security_yast2_ca.xml:1088
#, no-c-format
msgid "Passwords during LDAP Export"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:1093
#, no-c-format
msgid "Password"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:1098
#, no-c-format
msgid "Meaning"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:1107
#, no-c-format
msgid "LDAP Password"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:1112
#, no-c-format
msgid "Authorizes the user to make entries in the LDAP tree."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:1119
#, no-c-format
msgid "Certificate Password"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:1124
#, no-c-format
msgid "Authorizes the user to export the certificate."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:1131
#, no-c-format
msgid "New Certificate Password"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:1136
#, no-c-format
msgid ""
"The PKCS12 format is used during LDAP export. This format forces the "
"assignment of a new password for the exported certificate."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:1145
#, no-c-format
msgid "Certificates, CAs, and CRLs can be exported to LDAP."
msgstr ""

#. Tag: term
#: security_yast2_ca.xml:1150
#, no-c-format
msgid "Exporting a CA to LDAP"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:1152
#, no-c-format
msgid ""
"To export a CA, enter the CA as described in <xref linkend=\"sec.security."
"yast_ca.module.subca\"/>. Select <menuchoice> <guimenu>Extended</"
"guimenu><guimenu>Export to LDAP</guimenu></menuchoice> in the subsequent "
"dialog, which opens the dialog for entering LDAP data. If your system has "
"been configured with the &yast; LDAP client, the fields are already partly "
"completed. Otherwise, enter all the data manually. Entries are made in LDAP "
"in a separate tree with the attribute <quote>caCertificate</quote>."
msgstr ""

#. Tag: term
#: security_yast2_ca.xml:1179
#, no-c-format
msgid "Exporting a Certificate to LDAP"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:1181
#, no-c-format
msgid ""
"Enter the CA containing the certificate to export then select "
"<guimenu>Certificates</guimenu>. Select the required certificate from the "
"certificate list in the upper part of the dialog and select <menuchoice> "
"<guimenu>Export</guimenu><guimenu>Export to LDAP</guimenu></menuchoice>. The "
"LDAP data is entered here in the same way as for CAs. The certificate is "
"saved with the corresponding user object in the LDAP tree with the "
"attributes <quote>userCertificate</quote> (PEM format) and "
"<quote>userPKCS12</quote> (PKCS12 format)."
msgstr ""

#. Tag: term
#: security_yast2_ca.xml:1195
#, no-c-format
msgid "Exporting a CRL to LDAP"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:1197
#, no-c-format
msgid ""
"Enter the CA containing the CRL to export and select <guimenu>CRL</guimenu>. "
"If desired, create a new CRL and click <guimenu>Export</guimenu>. The dialog "
"that opens displays the export parameters. You can export the CRL for this "
"CA either once or in periodical time intervals. Activate the export by "
"selecting <guimenu>Export to LDAP</guimenu> and enter the respective LDAP "
"data. To do this at regular intervals, select the <guimenu>Repeated "
"Recreation and Export</guimenu> radio button and change the interval, if "
"appropriate."
msgstr ""

#. Tag: title
#: security_yast2_ca.xml:1214
#, no-c-format
msgid "Exporting CA Objects as a File"
msgstr ""

#. Tag: tertiary
#: security_yast2_ca.xml:1217
#, no-c-format
msgid "exporting CA objects as a file"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:1218
#, no-c-format
msgid ""
"If you have set up a repository on the computer for administering CAs, you "
"can use this option to create the CA objects directly as a file at the "
"correct location. Different output formats are available, such as PEM, DER, "
"and PKCS12. In the case of PEM, it is also possible to choose whether a "
"certificate should be exported with or without key and whether the key "
"should be encrypted. In the case of PKCS12, it is also possible to export "
"the certification path."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:1227
#, no-c-format
msgid ""
"Export a file in the same way for certificates, CAs as with LDAP, described "
"in <xref linkend=\"sec.security.yast_ca.module.exportldap\"/>, except you "
"should select <guimenu>Export as File</guimenu> instead of <guimenu>Export "
"to LDAP</guimenu>. This then takes you to a dialog for selecting the "
"required output format and entering the password and file name. The "
"certificate is stored at the required location after clicking <guimenu>OK</"
"guimenu>."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:1236
#, no-c-format
msgid ""
"For CRLs click <guimenu>Export</guimenu>, select <guimenu>Export to file</"
"guimenu>, choose the export format (PEM or DER) and enter the path. Proceed "
"with <guimenu>OK</guimenu> to save it to the respective location."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:1243
#, no-c-format
msgid ""
"You can select any storage location in the file system. This option can also "
"be used to save CA objects on a transport medium, such as a flash disk. The "
"<filename>/media</filename> directory generally holds any type of drive "
"except the hard disk of your system."
msgstr ""

#. Tag: title
#: security_yast2_ca.xml:1253
#, no-c-format
msgid "Importing Common Server Certificates"
msgstr ""

#. Tag: tertiary
#: security_yast2_ca.xml:1256
#, no-c-format
msgid "importing general server certificates"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:1257
#, no-c-format
msgid ""
"If you have exported a server certificate with &yast; to your media on an "
"isolated CA management computer, you can import this certificate on a server "
"as a <emphasis>common server certificate</emphasis>. Do this during "
"installation or at a later point with &yast;."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:1264
#, no-c-format
msgid ""
"You need one of the PKCS12 formats to import your certificate successfully."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:1269
#, no-c-format
msgid ""
"The general server certificate is stored in <command>/etc/ssl/servercerts</"
"command> and can be used there by any CA-supported service. When this "
"certificate expires, it can easily be replaced using the same mechanisms. To "
"get things functioning with the replaced certificate, restart the "
"participating services."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:1277
#, no-c-format
msgid ""
"If you select <guimenu>Import</guimenu> here, you can select the source in "
"the file system. This option can also be used to import certificates from "
"removable media, such as a flash disk."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:1283
#, no-c-format
msgid "To import a common server certificate, do the following:"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:1288
#, no-c-format
msgid ""
"Start &yast; and open <guimenu>Common Server Certificate</guimenu> under "
"<guimenu>Security and Users</guimenu>"
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:1294
#, no-c-format
msgid ""
"View the data for the current certificate in the description field after "
"&yast; has been started."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:1300
#, no-c-format
msgid "Select <guimenu>Import</guimenu> and the certificate file."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:1305
#, no-c-format
msgid ""
"Enter the password and click <guimenu>Next</guimenu>. The certificate is "
"imported then displayed in the description field."
msgstr ""

#. Tag: para
#: security_yast2_ca.xml:1311
#, no-c-format
msgid "Close &yast; with <guimenu>Finish</guimenu>."
msgstr ""

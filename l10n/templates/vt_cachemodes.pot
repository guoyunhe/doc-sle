# SOME DESCRIPTIVE TITLE.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2017-01-20 18:23+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <kde-i18n-doc@kde.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: vt_cachemodes.xml:9
#, no-c-format
msgid "Disk Cache Modes"
msgstr ""

#. Tag: title
#: vt_cachemodes.xml:18
#, no-c-format
msgid "Disk Interface Cache Modes"
msgstr ""

#. Tag: para
#: vt_cachemodes.xml:20
#, no-c-format
msgid ""
"Hypervisors allow for various storage caching strategies to be specified "
"when configuring a &vmguest;. Each guest disk interface can have one of the "
"following cache modes specified: <emphasis>writethrough</emphasis>, "
"<emphasis>writeback</emphasis>, <emphasis>none</emphasis>, "
"<emphasis>directsync</emphasis>, or <emphasis>unsafe</emphasis>. If no cache "
"mode is specified, an appropriate default cache mode is used. These cache "
"modes influence how host-based storage is accessed, as follows:"
msgstr ""

#. Tag: para
#: vt_cachemodes.xml:34
#, no-c-format
msgid "Read/write data may be cached in the host page cache."
msgstr ""

#. Tag: para
#: vt_cachemodes.xml:39
#, no-c-format
msgid ""
"The guest's storage controller is informed whether a write cache is present, "
"allowing for the use of a flush command."
msgstr ""

#. Tag: para
#: vt_cachemodes.xml:45
#, no-c-format
msgid ""
"Synchronous write mode may be used, in which write requests are reported "
"complete only when committed to the storage device."
msgstr ""

#. Tag: para
#: vt_cachemodes.xml:51
#, no-c-format
msgid ""
"Flush commands (generated by the guest storage controller) may be ignored "
"for performance reasons."
msgstr ""

#. Tag: para
#: vt_cachemodes.xml:58
#, no-c-format
msgid ""
"If a disorderly disconnection between the guest and its storage occurs, the "
"cache mode in use will affect whether data loss occurs. The cache mode can "
"also affect disk performance significantly. Additionally, some cache modes "
"are incompatible with live migration, depending on several factors. There "
"are no simple rules about what combination of cache mode, disk image format, "
"image placement, or storage sub-system is best. The user should plan each "
"guest's configuration carefully and experiment with various configurations "
"to determine the optimal performance."
msgstr ""

#. Tag: title
#: vt_cachemodes.xml:70
#, no-c-format
msgid "Description of Cache Modes"
msgstr ""

#. Tag: term
#: vt_cachemodes.xml:74
#, no-c-format
msgid "cache mode unspecified"
msgstr ""

#. Tag: para
#: vt_cachemodes.xml:76
#, no-c-format
msgid ""
"In older &qemu; versions, not specifying a cache mode meant that "
"<emphasis>writethrough</emphasis> would be used as the default. With modern "
"versions&mdash;as shipped with &productname;&mdash; the various guest "
"storage interfaces have been fixed to handle <emphasis>writeback</emphasis> "
"or <emphasis>writethrough</emphasis> semantics more correctly, allowing for "
"the default caching mode to be switched to <emphasis>writeback</emphasis>. "
"The guest driver for each of <literal>ide</literal>, <literal>scsi</"
"literal>, and <literal>virtio</literal> have within their power to disable "
"the write back cache, causing the caching mode used to revert to "
"<emphasis>writethrough</emphasis>. The typical guest's storage drivers will "
"maintain the default caching mode as <emphasis>writeback</emphasis>, however."
msgstr ""

#. Tag: term
#: vt_cachemodes.xml:94
#, no-c-format
msgid "writethrough"
msgstr ""

#. Tag: para
#: vt_cachemodes.xml:96
#, no-c-format
msgid ""
"This mode causes the hypervisor to interact with the disk image file or "
"block device with <literal>O_DSYNC</literal> semantics, where writes are "
"reported as completed only when the data has been committed to the storage "
"device. The host page cache is used in what can be termed a writethrough "
"caching mode. The guest's virtual storage adapter is informed that there is "
"no writeback cache, so the guest would not need to send down flush commands "
"to manage data integrity. The storage behaves as if there is a writethrough "
"cache."
msgstr ""

#. Tag: term
#: vt_cachemodes.xml:109 vt_cachemodes.xml:195
#, no-c-format
msgid "writeback"
msgstr ""

#. Tag: para
#: vt_cachemodes.xml:111
#, no-c-format
msgid ""
"This mode causes the hypervisor to interact with the disk image file or "
"block device with neither <literal>O_DSYNC</literal> nor <literal>O_DIRECT</"
"literal> semantics, so the host page cache is used and writes are reported "
"to the guest as completed when they are placed in the host page cache. The "
"normal page cache management will handle commitment to the storage device. "
"Additionally, the guest's virtual storage adapter is informed of the "
"writeback cache, so the guest would be expected to send down flush commands "
"as needed to manage data integrity. Analogous to a raid controller with RAM "
"cache."
msgstr ""

#. Tag: term
#: vt_cachemodes.xml:126
#, no-c-format
msgid "none"
msgstr ""

#. Tag: para
#: vt_cachemodes.xml:128
#, no-c-format
msgid ""
"This mode causes the hypervisor to interact with the disk image file or "
"block device with <literal>O_DIRECT</literal> semantics, so the host page "
"cache is bypassed and I/O happens directly between the hypervisor user space "
"buffers and the storage device. Because the actual storage device may report "
"a write as completed when placed in its write queue only, the guest's "
"virtual storage adapter is informed that there is a writeback cache. The "
"guest would be expected to send down flush commands as needed to manage data "
"integrity. Performance-wise, it is equivalent to direct access to your "
"host's disk."
msgstr ""

#. Tag: term
#: vt_cachemodes.xml:144 vt_cachemodes.xml:210
#, no-c-format
msgid "unsafe"
msgstr ""

#. Tag: para
#: vt_cachemodes.xml:146
#, no-c-format
msgid ""
"This mode is similar to the <literal>writeback</literal> mode discussed "
"above. The key aspect of this <quote>unsafe</quote> mode, is that all flush "
"commands from the guests are ignored. Using this mode implies that the user "
"has accepted the trade-off of performance over risk of data loss in case of "
"a host failure. Useful, for example, during guest installation, but not for "
"production workloads."
msgstr ""

#. Tag: term
#: vt_cachemodes.xml:157
#, no-c-format
msgid "directsync"
msgstr ""

#. Tag: para
#: vt_cachemodes.xml:159
#, no-c-format
msgid ""
"This mode causes the hypervisor to interact with the disk image file or "
"block device with both <literal>O_DSYNC</literal> and <literal>O_DIRECT</"
"literal> semantics. This means, writes are reported as completed only when "
"the data has been committed to the storage device, and when it is also "
"desirable to bypass the host page cache. Like <xref linkend=\"cache."
"writethrough\"/>, it is helpful to guests that do not send flushes when "
"needed. It was the last cache mode added, completing the possible "
"combinations of caching and direct access semantics."
msgstr ""

#. Tag: title
#: vt_cachemodes.xml:176
#, no-c-format
msgid "Data Integrity Implications of Cache Modes"
msgstr ""

#. Tag: term
#: vt_cachemodes.xml:180
#, no-c-format
msgid "writethrough, none, directsync"
msgstr ""

#. Tag: para
#: vt_cachemodes.xml:182
#, no-c-format
msgid ""
"These are the safest modes, and considered equally safe, given that the "
"guest operating system is <quote>modern and well behaved</quote>, which "
"means that it uses flushes as needed. If you have a suspect guest, use "
"<emphasis>writethough</emphasis>, or <emphasis>directsync</emphasis>. Note "
"that some file systems are not compatible with <literal>none</literal> or "
"<literal>directsync</literal>, as they do not support O_DIRECT, which these "
"cache modes rely on."
msgstr ""

#. Tag: para
#: vt_cachemodes.xml:197
#, no-c-format
msgid ""
"This mode informs the guest of the presence of a write cache, and relies on "
"the guest to send flush commands as needed to maintain data integrity within "
"its disk image. This is a common storage design which is completely "
"accounted for within modern file systems. But it should be noted that "
"because there is a window of time between the time a write is reported as "
"completed, and that write being committed to the storage device, this mode "
"exposes the guest to data loss in the unlikely case of a host failure."
msgstr ""

#. Tag: para
#: vt_cachemodes.xml:212
#, no-c-format
msgid ""
"This mode is similar to <emphasis>writeback</emphasis> caching except the "
"guest flush commands are ignored, nullifying the data integrity control of "
"these flush commands, and resulting in a higher risk of data loss because of "
"host failure. The name <quote>unsafe</quote> should serve as a warning that "
"there is a much higher potential for data loss because of a host failure "
"than with the other modes. Note that as the guest terminates, the cached "
"data is flushed at that time."
msgstr ""

#. Tag: title
#: vt_cachemodes.xml:227
#, no-c-format
msgid "Performance Implications of Cache Modes"
msgstr ""

#. Tag: para
#: vt_cachemodes.xml:229
#, no-c-format
msgid ""
"The choice to make full use of the page cache, or to write through it, or to "
"bypass it altogether can have dramatic performance implications. Other "
"factors that influence disk performance include the capabilities of the "
"actual storage system, what disk image format is used, the potential size of "
"the page cache and the IO scheduler used. Additionally, not flushing the "
"write cache increases performance, but with risk, as noted above. As a "
"general rule, high-end systems typically perform best with the cache mode "
"<literal>none</literal>, because of the reduced data copying that occurs. "
"The potential benefit of having multiple guests share the common host page "
"cache, the ratio of reads to writes, and the use of AIO mode "
"<literal>native</literal> (see below) should also be considered."
msgstr ""

#. Tag: title
#: vt_cachemodes.xml:244
#, no-c-format
msgid "Effect of Cache Modes on Live Migration"
msgstr ""

#. Tag: para
#: vt_cachemodes.xml:246
#, no-c-format
msgid ""
"The caching of storage data and metadata restricts the configurations that "
"support live migration. Currently, only <literal>raw</literal>, "
"<literal>qcow2</literal> and <literal>qed</literal> image formats can be "
"used for live migration. If a clustered file system is used, all cache modes "
"support live migration. Otherwise the only cache mode that supports live "
"migration on read/write shared storage is <literal>none</literal>."
msgstr ""

#. Tag: para
#: vt_cachemodes.xml:255
#, no-c-format
msgid ""
"The &libvirt; management layer includes checks for migration compatibility "
"based on several factors. If the guest storage is hosted on a clustered file "
"system, is read-only or is marked shareable, then the cache mode is ignored "
"when determining if migration can be allowed. Otherwise &libvirt; will not "
"allow migration unless the cache mode is set to <literal>none</literal>. "
"However, this restriction can be overridden with the <quote>unsafe</quote> "
"option to the migration APIs, which is also supported by <command>virsh</"
"command>, as for example in"
msgstr ""

#. Tag: screen
#: vt_cachemodes.xml:267
#, no-c-format
msgid "virsh migrate --live --unsafe"
msgstr ""

#. Tag: para
#: vt_cachemodes.xml:270
#, no-c-format
msgid ""
"The cache mode <literal>none</literal> is required for the AIO mode setting "
"<literal>native</literal>. If another cache mode is used, then the AIO mode "
"will silently be switched back to the default <literal>threads</literal>. "
"The guest flush within the host is implemented using "
"<systemitem>fdatasync()</systemitem>."
msgstr ""
